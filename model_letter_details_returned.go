/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
)

// LetterDetailsReturned Properties that the letters in your Creative should have.
type LetterDetailsReturned struct {
	// Set this key to `true` if you would like to print in color, false for black and white.
	Color bool `json:"color"`
	// A single-element array containing an existing card id in a string format. See [cards](#tag/Cards) for more information.
	Cards []string `json:"cards"`
	// Specifies the location of the address information that will show through the double-window envelope. 
	AddressPlacement *string `json:"address_placement,omitempty"`
	CustomEnvelope NullableCustomEnvelopeReturned `json:"custom_envelope,omitempty"`
	// Set this attribute to `true` for double sided printing,  `false` for for single sided printing.
	DoubleSided *bool `json:"double_sided,omitempty"`
	// Add an extra service to your letter.
	ExtraService *string `json:"extra_service,omitempty"`
	MailType *MailType `json:"mail_type,omitempty"`
	ReturnEnvelope interface{} `json:"return_envelope,omitempty"`
	// Allows for letter bleed. Enabled only with specific feature flags.
	Bleed *bool `json:"bleed,omitempty"`
	FileOriginalUrl NullableString `json:"file_original_url,omitempty"`
}

// NewLetterDetailsReturned instantiates a new LetterDetailsReturned object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLetterDetailsReturned(color bool, cards []string) *LetterDetailsReturned {
	this := LetterDetailsReturned{}
	this.Color = color
	this.Cards = cards
	var addressPlacement string = "top_first_page"
	this.AddressPlacement = &addressPlacement
	var doubleSided bool = true
	this.DoubleSided = &doubleSided
	var mailType MailType = MAILTYPE_FIRST_CLASS
	this.MailType = &mailType
	var bleed bool = false
	this.Bleed = &bleed
	return &this
}

// NewLetterDetailsReturnedWithDefaults instantiates a new LetterDetailsReturned object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLetterDetailsReturnedWithDefaults() *LetterDetailsReturned {
	this := LetterDetailsReturned{}
	var addressPlacement string = "top_first_page"
	this.AddressPlacement = &addressPlacement
	var doubleSided bool = true
	this.DoubleSided = &doubleSided
	var mailType MailType = MAILTYPE_FIRST_CLASS
	this.MailType = &mailType
	var bleed bool = false
	this.Bleed = &bleed
	return &this
}

// GetColor returns the Color field value
func (o *LetterDetailsReturned) GetColor() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Color
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
func (o *LetterDetailsReturned) GetColorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Color, true
}

// SetColor sets field value
func (o *LetterDetailsReturned) SetColor(v bool) {
	o.Color = v
}

// GetCards returns the Cards field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *LetterDetailsReturned) GetCards() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Cards
}

// GetCardsOk returns a tuple with the Cards field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LetterDetailsReturned) GetCardsOk() ([]string, bool) {
	if o == nil || o.Cards == nil {
		return nil, false
	}
	return o.Cards, true
}

// SetCards sets field value
func (o *LetterDetailsReturned) SetCards(v []string) {
	o.Cards = v
}

// GetAddressPlacement returns the AddressPlacement field value if set, zero value otherwise.
func (o *LetterDetailsReturned) GetAddressPlacement() string {
	if o == nil || o.AddressPlacement == nil {
		var ret string
		return ret
	}
	return *o.AddressPlacement
}

// GetAddressPlacementOk returns a tuple with the AddressPlacement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LetterDetailsReturned) GetAddressPlacementOk() (*string, bool) {
	if o == nil || o.AddressPlacement == nil {
		return nil, false
	}
	return o.AddressPlacement, true
}

// HasAddressPlacement returns a boolean if a field has been set.
func (o *LetterDetailsReturned) HasAddressPlacement() bool {
	if o != nil && o.AddressPlacement != nil {
		return true
	}

	return false
}

// SetAddressPlacement gets a reference to the given string and assigns it to the AddressPlacement field.
func (o *LetterDetailsReturned) SetAddressPlacement(v string) {
	o.AddressPlacement = &v
}

// GetCustomEnvelope returns the CustomEnvelope field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LetterDetailsReturned) GetCustomEnvelope() CustomEnvelopeReturned {
	if o == nil || o.CustomEnvelope.Get() == nil {
		var ret CustomEnvelopeReturned
		return ret
	}
	return *o.CustomEnvelope.Get()
}

// GetCustomEnvelopeOk returns a tuple with the CustomEnvelope field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LetterDetailsReturned) GetCustomEnvelopeOk() (*CustomEnvelopeReturned, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomEnvelope.Get(), o.CustomEnvelope.IsSet()
}

// HasCustomEnvelope returns a boolean if a field has been set.
func (o *LetterDetailsReturned) HasCustomEnvelope() bool {
	if o != nil && o.CustomEnvelope.IsSet() {
		return true
	}

	return false
}

// SetCustomEnvelope gets a reference to the given NullableCustomEnvelopeReturned and assigns it to the CustomEnvelope field.
func (o *LetterDetailsReturned) SetCustomEnvelope(v CustomEnvelopeReturned) {
	o.CustomEnvelope.Set(&v)
}
// SetCustomEnvelopeNil sets the value for CustomEnvelope to be an explicit nil
func (o *LetterDetailsReturned) SetCustomEnvelopeNil() {
	o.CustomEnvelope.Set(nil)
}

// UnsetCustomEnvelope ensures that no value is present for CustomEnvelope, not even an explicit nil
func (o *LetterDetailsReturned) UnsetCustomEnvelope() {
	o.CustomEnvelope.Unset()
}

// GetDoubleSided returns the DoubleSided field value if set, zero value otherwise.
func (o *LetterDetailsReturned) GetDoubleSided() bool {
	if o == nil || o.DoubleSided == nil {
		var ret bool
		return ret
	}
	return *o.DoubleSided
}

// GetDoubleSidedOk returns a tuple with the DoubleSided field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LetterDetailsReturned) GetDoubleSidedOk() (*bool, bool) {
	if o == nil || o.DoubleSided == nil {
		return nil, false
	}
	return o.DoubleSided, true
}

// HasDoubleSided returns a boolean if a field has been set.
func (o *LetterDetailsReturned) HasDoubleSided() bool {
	if o != nil && o.DoubleSided != nil {
		return true
	}

	return false
}

// SetDoubleSided gets a reference to the given bool and assigns it to the DoubleSided field.
func (o *LetterDetailsReturned) SetDoubleSided(v bool) {
	o.DoubleSided = &v
}

// GetExtraService returns the ExtraService field value if set, zero value otherwise.
func (o *LetterDetailsReturned) GetExtraService() string {
	if o == nil || o.ExtraService == nil {
		var ret string
		return ret
	}
	return *o.ExtraService
}

// GetExtraServiceOk returns a tuple with the ExtraService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LetterDetailsReturned) GetExtraServiceOk() (*string, bool) {
	if o == nil || o.ExtraService == nil {
		return nil, false
	}
	return o.ExtraService, true
}

// HasExtraService returns a boolean if a field has been set.
func (o *LetterDetailsReturned) HasExtraService() bool {
	if o != nil && o.ExtraService != nil {
		return true
	}

	return false
}

// SetExtraService gets a reference to the given string and assigns it to the ExtraService field.
func (o *LetterDetailsReturned) SetExtraService(v string) {
	o.ExtraService = &v
}

// GetMailType returns the MailType field value if set, zero value otherwise.
func (o *LetterDetailsReturned) GetMailType() MailType {
	if o == nil || o.MailType == nil {
		var ret MailType
		return ret
	}
	return *o.MailType
}

// GetMailTypeOk returns a tuple with the MailType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LetterDetailsReturned) GetMailTypeOk() (*MailType, bool) {
	if o == nil || o.MailType == nil {
		return nil, false
	}
	return o.MailType, true
}

// HasMailType returns a boolean if a field has been set.
func (o *LetterDetailsReturned) HasMailType() bool {
	if o != nil && o.MailType != nil {
		return true
	}

	return false
}

// SetMailType gets a reference to the given MailType and assigns it to the MailType field.
func (o *LetterDetailsReturned) SetMailType(v MailType) {
	o.MailType = &v
}

// GetReturnEnvelope returns the ReturnEnvelope field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LetterDetailsReturned) GetReturnEnvelope() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReturnEnvelope
}

// GetReturnEnvelopeOk returns a tuple with the ReturnEnvelope field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LetterDetailsReturned) GetReturnEnvelopeOk() (*interface{}, bool) {
	if o == nil || o.ReturnEnvelope == nil {
		return nil, false
	}
	return &o.ReturnEnvelope, true
}

// HasReturnEnvelope returns a boolean if a field has been set.
func (o *LetterDetailsReturned) HasReturnEnvelope() bool {
	if o != nil && o.ReturnEnvelope != nil {
		return true
	}

	return false
}

// SetReturnEnvelope gets a reference to the given interface{} and assigns it to the ReturnEnvelope field.
func (o *LetterDetailsReturned) SetReturnEnvelope(v interface{}) {
	o.ReturnEnvelope = v
}

// GetBleed returns the Bleed field value if set, zero value otherwise.
func (o *LetterDetailsReturned) GetBleed() bool {
	if o == nil || o.Bleed == nil {
		var ret bool
		return ret
	}
	return *o.Bleed
}

// GetBleedOk returns a tuple with the Bleed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LetterDetailsReturned) GetBleedOk() (*bool, bool) {
	if o == nil || o.Bleed == nil {
		return nil, false
	}
	return o.Bleed, true
}

// HasBleed returns a boolean if a field has been set.
func (o *LetterDetailsReturned) HasBleed() bool {
	if o != nil && o.Bleed != nil {
		return true
	}

	return false
}

// SetBleed gets a reference to the given bool and assigns it to the Bleed field.
func (o *LetterDetailsReturned) SetBleed(v bool) {
	o.Bleed = &v
}

// GetFileOriginalUrl returns the FileOriginalUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LetterDetailsReturned) GetFileOriginalUrl() string {
	if o == nil || o.FileOriginalUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.FileOriginalUrl.Get()
}

// GetFileOriginalUrlOk returns a tuple with the FileOriginalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LetterDetailsReturned) GetFileOriginalUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileOriginalUrl.Get(), o.FileOriginalUrl.IsSet()
}

// HasFileOriginalUrl returns a boolean if a field has been set.
func (o *LetterDetailsReturned) HasFileOriginalUrl() bool {
	if o != nil && o.FileOriginalUrl.IsSet() {
		return true
	}

	return false
}

// SetFileOriginalUrl gets a reference to the given NullableString and assigns it to the FileOriginalUrl field.
func (o *LetterDetailsReturned) SetFileOriginalUrl(v string) {
	o.FileOriginalUrl.Set(&v)
}
// SetFileOriginalUrlNil sets the value for FileOriginalUrl to be an explicit nil
func (o *LetterDetailsReturned) SetFileOriginalUrlNil() {
	o.FileOriginalUrl.Set(nil)
}

// UnsetFileOriginalUrl ensures that no value is present for FileOriginalUrl, not even an explicit nil
func (o *LetterDetailsReturned) UnsetFileOriginalUrl() {
	o.FileOriginalUrl.Unset()
}

func (o LetterDetailsReturned) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["color"] = o.Color
	}
	if o.Cards != nil {
		toSerialize["cards"] = o.Cards
	}
	if o.AddressPlacement != nil {
		toSerialize["address_placement"] = o.AddressPlacement
	}
	if o.CustomEnvelope.IsSet() {
		toSerialize["custom_envelope"] = o.CustomEnvelope.Get()
	}
	if o.DoubleSided != nil {
		toSerialize["double_sided"] = o.DoubleSided
	}
	if o.ExtraService != nil {
		toSerialize["extra_service"] = o.ExtraService
	}
	if o.MailType != nil {
		toSerialize["mail_type"] = o.MailType
	}
	if o.ReturnEnvelope != nil {
		toSerialize["return_envelope"] = o.ReturnEnvelope
	}
	if o.Bleed != nil {
		toSerialize["bleed"] = o.Bleed
	}
	if o.FileOriginalUrl.IsSet() {
		toSerialize["file_original_url"] = o.FileOriginalUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLetterDetailsReturned struct {
	value *LetterDetailsReturned
	isSet bool
}

func (v NullableLetterDetailsReturned) Get() *LetterDetailsReturned {
	return v.value
}

func (v *NullableLetterDetailsReturned) Set(val *LetterDetailsReturned) {
	v.value = val
	v.isSet = true
}

func (v NullableLetterDetailsReturned) IsSet() bool {
	return v.isSet
}

func (v *NullableLetterDetailsReturned) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLetterDetailsReturned(val *LetterDetailsReturned) *NullableLetterDetailsReturned {
	return &NullableLetterDetailsReturned{value: val, isSet: true}
}

func (v NullableLetterDetailsReturned) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLetterDetailsReturned) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


