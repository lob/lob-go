/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
	"fmt"
)

// CountryExtended Must be a 2 letter country short-name code (ISO 3166).
type CountryExtended string

// List of country_extended
const (
	COUNTRYEXTENDED_AD CountryExtended = "AD"
	COUNTRYEXTENDED_AE CountryExtended = "AE"
	COUNTRYEXTENDED_AF CountryExtended = "AF"
	COUNTRYEXTENDED_AG CountryExtended = "AG"
	COUNTRYEXTENDED_AI CountryExtended = "AI"
	COUNTRYEXTENDED_AL CountryExtended = "AL"
	COUNTRYEXTENDED_AN CountryExtended = "AN"
	COUNTRYEXTENDED_AO CountryExtended = "AO"
	COUNTRYEXTENDED_AQ CountryExtended = "AQ"
	COUNTRYEXTENDED_AR CountryExtended = "AR"
	COUNTRYEXTENDED_AT CountryExtended = "AT"
	COUNTRYEXTENDED_AU CountryExtended = "AU"
	COUNTRYEXTENDED_AW CountryExtended = "AW"
	COUNTRYEXTENDED_AZ CountryExtended = "AZ"
	COUNTRYEXTENDED_BA CountryExtended = "BA"
	COUNTRYEXTENDED_BB CountryExtended = "BB"
	COUNTRYEXTENDED_BD CountryExtended = "BD"
	COUNTRYEXTENDED_BE CountryExtended = "BE"
	COUNTRYEXTENDED_BF CountryExtended = "BF"
	COUNTRYEXTENDED_BG CountryExtended = "BG"
	COUNTRYEXTENDED_BH CountryExtended = "BH"
	COUNTRYEXTENDED_BI CountryExtended = "BI"
	COUNTRYEXTENDED_BJ CountryExtended = "BJ"
	COUNTRYEXTENDED_BM CountryExtended = "BM"
	COUNTRYEXTENDED_BN CountryExtended = "BN"
	COUNTRYEXTENDED_BO CountryExtended = "BO"
	COUNTRYEXTENDED_BQ CountryExtended = "BQ"
	COUNTRYEXTENDED_BR CountryExtended = "BR"
	COUNTRYEXTENDED_BS CountryExtended = "BS"
	COUNTRYEXTENDED_BT CountryExtended = "BT"
	COUNTRYEXTENDED_BW CountryExtended = "BW"
	COUNTRYEXTENDED_BY CountryExtended = "BY"
	COUNTRYEXTENDED_BZ CountryExtended = "BZ"
	COUNTRYEXTENDED_CA CountryExtended = "CA"
	COUNTRYEXTENDED_CD CountryExtended = "CD"
	COUNTRYEXTENDED_CG CountryExtended = "CG"
	COUNTRYEXTENDED_CH CountryExtended = "CH"
	COUNTRYEXTENDED_CI CountryExtended = "CI"
	COUNTRYEXTENDED_CK CountryExtended = "CK"
	COUNTRYEXTENDED_CL CountryExtended = "CL"
	COUNTRYEXTENDED_CM CountryExtended = "CM"
	COUNTRYEXTENDED_CN CountryExtended = "CN"
	COUNTRYEXTENDED_CO CountryExtended = "CO"
	COUNTRYEXTENDED_CR CountryExtended = "CR"
	COUNTRYEXTENDED_CS CountryExtended = "CS"
	COUNTRYEXTENDED_CU CountryExtended = "CU"
	COUNTRYEXTENDED_CV CountryExtended = "CV"
	COUNTRYEXTENDED_CW CountryExtended = "CW"
	COUNTRYEXTENDED_CY CountryExtended = "CY"
	COUNTRYEXTENDED_CZ CountryExtended = "CZ"
	COUNTRYEXTENDED_DE CountryExtended = "DE"
	COUNTRYEXTENDED_DJ CountryExtended = "DJ"
	COUNTRYEXTENDED_DK CountryExtended = "DK"
	COUNTRYEXTENDED_DM CountryExtended = "DM"
	COUNTRYEXTENDED_DO CountryExtended = "DO"
	COUNTRYEXTENDED_DZ CountryExtended = "DZ"
	COUNTRYEXTENDED_EC CountryExtended = "EC"
	COUNTRYEXTENDED_EE CountryExtended = "EE"
	COUNTRYEXTENDED_EG CountryExtended = "EG"
	COUNTRYEXTENDED_EH CountryExtended = "EH"
	COUNTRYEXTENDED_ER CountryExtended = "ER"
	COUNTRYEXTENDED_ES CountryExtended = "ES"
	COUNTRYEXTENDED_ET CountryExtended = "ET"
	COUNTRYEXTENDED_FI CountryExtended = "FI"
	COUNTRYEXTENDED_FJ CountryExtended = "FJ"
	COUNTRYEXTENDED_FK CountryExtended = "FK"
	COUNTRYEXTENDED_FO CountryExtended = "FO"
	COUNTRYEXTENDED_FR CountryExtended = "FR"
	COUNTRYEXTENDED_GA CountryExtended = "GA"
	COUNTRYEXTENDED_GB CountryExtended = "GB"
	COUNTRYEXTENDED_GD CountryExtended = "GD"
	COUNTRYEXTENDED_GE CountryExtended = "GE"
	COUNTRYEXTENDED_GH CountryExtended = "GH"
	COUNTRYEXTENDED_GI CountryExtended = "GI"
	COUNTRYEXTENDED_GL CountryExtended = "GL"
	COUNTRYEXTENDED_GM CountryExtended = "GM"
	COUNTRYEXTENDED_GN CountryExtended = "GN"
	COUNTRYEXTENDED_GQ CountryExtended = "GQ"
	COUNTRYEXTENDED_GR CountryExtended = "GR"
	COUNTRYEXTENDED_GS CountryExtended = "GS"
	COUNTRYEXTENDED_GT CountryExtended = "GT"
	COUNTRYEXTENDED_GW CountryExtended = "GW"
	COUNTRYEXTENDED_GY CountryExtended = "GY"
	COUNTRYEXTENDED_HK CountryExtended = "HK"
	COUNTRYEXTENDED_HN CountryExtended = "HN"
	COUNTRYEXTENDED_HR CountryExtended = "HR"
	COUNTRYEXTENDED_HT CountryExtended = "HT"
	COUNTRYEXTENDED_HU CountryExtended = "HU"
	COUNTRYEXTENDED_ID CountryExtended = "ID"
	COUNTRYEXTENDED_IE CountryExtended = "IE"
	COUNTRYEXTENDED_IL CountryExtended = "IL"
	COUNTRYEXTENDED_IN CountryExtended = "IN"
	COUNTRYEXTENDED_IO CountryExtended = "IO"
	COUNTRYEXTENDED_IQ CountryExtended = "IQ"
	COUNTRYEXTENDED_IR CountryExtended = "IR"
	COUNTRYEXTENDED_IS CountryExtended = "IS"
	COUNTRYEXTENDED_IT CountryExtended = "IT"
	COUNTRYEXTENDED_JM CountryExtended = "JM"
	COUNTRYEXTENDED_JO CountryExtended = "JO"
	COUNTRYEXTENDED_JP CountryExtended = "JP"
	COUNTRYEXTENDED_KE CountryExtended = "KE"
	COUNTRYEXTENDED_KG CountryExtended = "KG"
	COUNTRYEXTENDED_KH CountryExtended = "KH"
	COUNTRYEXTENDED_KI CountryExtended = "KI"
	COUNTRYEXTENDED_KM CountryExtended = "KM"
	COUNTRYEXTENDED_KN CountryExtended = "KN"
	COUNTRYEXTENDED_KP CountryExtended = "KP"
	COUNTRYEXTENDED_KR CountryExtended = "KR"
	COUNTRYEXTENDED_KW CountryExtended = "KW"
	COUNTRYEXTENDED_KY CountryExtended = "KY"
	COUNTRYEXTENDED_KZ CountryExtended = "KZ"
	COUNTRYEXTENDED_LA CountryExtended = "LA"
	COUNTRYEXTENDED_LB CountryExtended = "LB"
	COUNTRYEXTENDED_LC CountryExtended = "LC"
	COUNTRYEXTENDED_LI CountryExtended = "LI"
	COUNTRYEXTENDED_LK CountryExtended = "LK"
	COUNTRYEXTENDED_LR CountryExtended = "LR"
	COUNTRYEXTENDED_LS CountryExtended = "LS"
	COUNTRYEXTENDED_LT CountryExtended = "LT"
	COUNTRYEXTENDED_LU CountryExtended = "LU"
	COUNTRYEXTENDED_LV CountryExtended = "LV"
	COUNTRYEXTENDED_LY CountryExtended = "LY"
	COUNTRYEXTENDED_MA CountryExtended = "MA"
	COUNTRYEXTENDED_MC CountryExtended = "MC"
	COUNTRYEXTENDED_MD CountryExtended = "MD"
	COUNTRYEXTENDED_ME CountryExtended = "ME"
	COUNTRYEXTENDED_MG CountryExtended = "MG"
	COUNTRYEXTENDED_MK CountryExtended = "MK"
	COUNTRYEXTENDED_ML CountryExtended = "ML"
	COUNTRYEXTENDED_MM CountryExtended = "MM"
	COUNTRYEXTENDED_MN CountryExtended = "MN"
	COUNTRYEXTENDED_MO CountryExtended = "MO"
	COUNTRYEXTENDED_MR CountryExtended = "MR"
	COUNTRYEXTENDED_MS CountryExtended = "MS"
	COUNTRYEXTENDED_MT CountryExtended = "MT"
	COUNTRYEXTENDED_MU CountryExtended = "MU"
	COUNTRYEXTENDED_MV CountryExtended = "MV"
	COUNTRYEXTENDED_MW CountryExtended = "MW"
	COUNTRYEXTENDED_MX CountryExtended = "MX"
	COUNTRYEXTENDED_MY CountryExtended = "MY"
	COUNTRYEXTENDED_MZ CountryExtended = "MZ"
	COUNTRYEXTENDED_NA CountryExtended = "NA"
	COUNTRYEXTENDED_NE CountryExtended = "NE"
	COUNTRYEXTENDED_NF CountryExtended = "NF"
	COUNTRYEXTENDED_NG CountryExtended = "NG"
	COUNTRYEXTENDED_NI CountryExtended = "NI"
	COUNTRYEXTENDED_NL CountryExtended = "NL"
	COUNTRYEXTENDED_NO CountryExtended = "NO"
	COUNTRYEXTENDED_NP CountryExtended = "NP"
	COUNTRYEXTENDED_NR CountryExtended = "NR"
	COUNTRYEXTENDED_NU CountryExtended = "NU"
	COUNTRYEXTENDED_NZ CountryExtended = "NZ"
	COUNTRYEXTENDED_OM CountryExtended = "OM"
	COUNTRYEXTENDED_PA CountryExtended = "PA"
	COUNTRYEXTENDED_PE CountryExtended = "PE"
	COUNTRYEXTENDED_PG CountryExtended = "PG"
	COUNTRYEXTENDED_PH CountryExtended = "PH"
	COUNTRYEXTENDED_PK CountryExtended = "PK"
	COUNTRYEXTENDED_PL CountryExtended = "PL"
	COUNTRYEXTENDED_PN CountryExtended = "PN"
	COUNTRYEXTENDED_PT CountryExtended = "PT"
	COUNTRYEXTENDED_PY CountryExtended = "PY"
	COUNTRYEXTENDED_QA CountryExtended = "QA"
	COUNTRYEXTENDED_RO CountryExtended = "RO"
	COUNTRYEXTENDED_RS CountryExtended = "RS"
	COUNTRYEXTENDED_RU CountryExtended = "RU"
	COUNTRYEXTENDED_RW CountryExtended = "RW"
	COUNTRYEXTENDED_SA CountryExtended = "SA"
	COUNTRYEXTENDED_SB CountryExtended = "SB"
	COUNTRYEXTENDED_SC CountryExtended = "SC"
	COUNTRYEXTENDED_SD CountryExtended = "SD"
	COUNTRYEXTENDED_SE CountryExtended = "SE"
	COUNTRYEXTENDED_SG CountryExtended = "SG"
	COUNTRYEXTENDED_SH CountryExtended = "SH"
	COUNTRYEXTENDED_SI CountryExtended = "SI"
	COUNTRYEXTENDED_SK CountryExtended = "SK"
	COUNTRYEXTENDED_SL CountryExtended = "SL"
	COUNTRYEXTENDED_SM CountryExtended = "SM"
	COUNTRYEXTENDED_SN CountryExtended = "SN"
	COUNTRYEXTENDED_SO CountryExtended = "SO"
	COUNTRYEXTENDED_SR CountryExtended = "SR"
	COUNTRYEXTENDED_SS CountryExtended = "SS"
	COUNTRYEXTENDED_ST CountryExtended = "ST"
	COUNTRYEXTENDED_SV CountryExtended = "SV"
	COUNTRYEXTENDED_SX CountryExtended = "SX"
	COUNTRYEXTENDED_SY CountryExtended = "SY"
	COUNTRYEXTENDED_SZ CountryExtended = "SZ"
	COUNTRYEXTENDED_TC CountryExtended = "TC"
	COUNTRYEXTENDED_TD CountryExtended = "TD"
	COUNTRYEXTENDED_TG CountryExtended = "TG"
	COUNTRYEXTENDED_TH CountryExtended = "TH"
	COUNTRYEXTENDED_TJ CountryExtended = "TJ"
	COUNTRYEXTENDED_TK CountryExtended = "TK"
	COUNTRYEXTENDED_TL CountryExtended = "TL"
	COUNTRYEXTENDED_TM CountryExtended = "TM"
	COUNTRYEXTENDED_TN CountryExtended = "TN"
	COUNTRYEXTENDED_TO CountryExtended = "TO"
	COUNTRYEXTENDED_TR CountryExtended = "TR"
	COUNTRYEXTENDED_TT CountryExtended = "TT"
	COUNTRYEXTENDED_TV CountryExtended = "TV"
	COUNTRYEXTENDED_TW CountryExtended = "TW"
	COUNTRYEXTENDED_TZ CountryExtended = "TZ"
	COUNTRYEXTENDED_UA CountryExtended = "UA"
	COUNTRYEXTENDED_UG CountryExtended = "UG"
	COUNTRYEXTENDED_US CountryExtended = "US"
	COUNTRYEXTENDED_UY CountryExtended = "UY"
	COUNTRYEXTENDED_UZ CountryExtended = "UZ"
	COUNTRYEXTENDED_VA CountryExtended = "VA"
	COUNTRYEXTENDED_VC CountryExtended = "VC"
	COUNTRYEXTENDED_VE CountryExtended = "VE"
	COUNTRYEXTENDED_VG CountryExtended = "VG"
	COUNTRYEXTENDED_VN CountryExtended = "VN"
	COUNTRYEXTENDED_VU CountryExtended = "VU"
	COUNTRYEXTENDED_WS CountryExtended = "WS"
	COUNTRYEXTENDED_YE CountryExtended = "YE"
	COUNTRYEXTENDED_ZA CountryExtended = "ZA"
	COUNTRYEXTENDED_ZM CountryExtended = "ZM"
	COUNTRYEXTENDED_ZW CountryExtended = "ZW"
)

// All allowed values of CountryExtended enum
var AllowedCountryExtendedEnumValues = []CountryExtended{
	"AD",
	"AE",
	"AF",
	"AG",
	"AI",
	"AL",
	"AN",
	"AO",
	"AQ",
	"AR",
	"AT",
	"AU",
	"AW",
	"AZ",
	"BA",
	"BB",
	"BD",
	"BE",
	"BF",
	"BG",
	"BH",
	"BI",
	"BJ",
	"BM",
	"BN",
	"BO",
	"BQ",
	"BR",
	"BS",
	"BT",
	"BW",
	"BY",
	"BZ",
	"CA",
	"CD",
	"CG",
	"CH",
	"CI",
	"CK",
	"CL",
	"CM",
	"CN",
	"CO",
	"CR",
	"CS",
	"CU",
	"CV",
	"CW",
	"CY",
	"CZ",
	"DE",
	"DJ",
	"DK",
	"DM",
	"DO",
	"DZ",
	"EC",
	"EE",
	"EG",
	"EH",
	"ER",
	"ES",
	"ET",
	"FI",
	"FJ",
	"FK",
	"FO",
	"FR",
	"GA",
	"GB",
	"GD",
	"GE",
	"GH",
	"GI",
	"GL",
	"GM",
	"GN",
	"GQ",
	"GR",
	"GS",
	"GT",
	"GW",
	"GY",
	"HK",
	"HN",
	"HR",
	"HT",
	"HU",
	"ID",
	"IE",
	"IL",
	"IN",
	"IO",
	"IQ",
	"IR",
	"IS",
	"IT",
	"JM",
	"JO",
	"JP",
	"KE",
	"KG",
	"KH",
	"KI",
	"KM",
	"KN",
	"KP",
	"KR",
	"KW",
	"KY",
	"KZ",
	"LA",
	"LB",
	"LC",
	"LI",
	"LK",
	"LR",
	"LS",
	"LT",
	"LU",
	"LV",
	"LY",
	"MA",
	"MC",
	"MD",
	"ME",
	"MG",
	"MK",
	"ML",
	"MM",
	"MN",
	"MO",
	"MR",
	"MS",
	"MT",
	"MU",
	"MV",
	"MW",
	"MX",
	"MY",
	"MZ",
	"NA",
	"NE",
	"NF",
	"NG",
	"NI",
	"NL",
	"NO",
	"NP",
	"NR",
	"NU",
	"NZ",
	"OM",
	"PA",
	"PE",
	"PG",
	"PH",
	"PK",
	"PL",
	"PN",
	"PT",
	"PY",
	"QA",
	"RO",
	"RS",
	"RU",
	"RW",
	"SA",
	"SB",
	"SC",
	"SD",
	"SE",
	"SG",
	"SH",
	"SI",
	"SK",
	"SL",
	"SM",
	"SN",
	"SO",
	"SR",
	"SS",
	"ST",
	"SV",
	"SX",
	"SY",
	"SZ",
	"TC",
	"TD",
	"TG",
	"TH",
	"TJ",
	"TK",
	"TL",
	"TM",
	"TN",
	"TO",
	"TR",
	"TT",
	"TV",
	"TW",
	"TZ",
	"UA",
	"UG",
	"US",
	"UY",
	"UZ",
	"VA",
	"VC",
	"VE",
	"VG",
	"VN",
	"VU",
	"WS",
	"YE",
	"ZA",
	"ZM",
	"ZW",
}

func (v *CountryExtended) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CountryExtended(value)
	for _, existing := range AllowedCountryExtendedEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CountryExtended", value)
}

// NewCountryExtendedFromValue returns a pointer to a valid CountryExtended
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCountryExtendedFromValue(v string) (*CountryExtended, error) {
	ev := CountryExtended(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CountryExtended: valid values are %v", v, AllowedCountryExtendedEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CountryExtended) IsValid() bool {
	for _, existing := range AllowedCountryExtendedEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to country_extended value
func (v CountryExtended) Ptr() *CountryExtended {
	return &v
}

type NullableCountryExtended struct {
	value *CountryExtended
	isSet bool
}

func (v NullableCountryExtended) Get() *CountryExtended {
	return v.value
}

func (v *NullableCountryExtended) Set(val *CountryExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableCountryExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableCountryExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCountryExtended(val *CountryExtended) *NullableCountryExtended {
	return &NullableCountryExtended{value: val, isSet: true}
}

func (v NullableCountryExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCountryExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

