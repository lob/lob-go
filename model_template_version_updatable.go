/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
)

// TemplateVersionUpdatable struct for TemplateVersionUpdatable
type TemplateVersionUpdatable struct {
	// An internal description that identifies this resource. Must be no longer than 255 characters. 
	Description NullableString `json:"description,omitempty"`
	Engine NullableEngineHtml `json:"engine,omitempty"`
}

// NewTemplateVersionUpdatable instantiates a new TemplateVersionUpdatable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateVersionUpdatable() *TemplateVersionUpdatable {
	this := TemplateVersionUpdatable{}
	var engine EngineHtml = ENGINEHTML_LEGACY
	this.Engine = *NewNullableEngineHtml(&engine)
	return &this
}

// NewTemplateVersionUpdatableWithDefaults instantiates a new TemplateVersionUpdatable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateVersionUpdatableWithDefaults() *TemplateVersionUpdatable {
	this := TemplateVersionUpdatable{}
	var engine EngineHtml = ENGINEHTML_LEGACY
	this.Engine = *NewNullableEngineHtml(&engine)
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateVersionUpdatable) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateVersionUpdatable) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateVersionUpdatable) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TemplateVersionUpdatable) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TemplateVersionUpdatable) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TemplateVersionUpdatable) UnsetDescription() {
	o.Description.Unset()
}

// GetEngine returns the Engine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateVersionUpdatable) GetEngine() EngineHtml {
	if o == nil || o.Engine.Get() == nil {
		var ret EngineHtml
		return ret
	}
	return *o.Engine.Get()
}

// GetEngineOk returns a tuple with the Engine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateVersionUpdatable) GetEngineOk() (*EngineHtml, bool) {
	if o == nil {
		return nil, false
	}
	return o.Engine.Get(), o.Engine.IsSet()
}

// HasEngine returns a boolean if a field has been set.
func (o *TemplateVersionUpdatable) HasEngine() bool {
	if o != nil && o.Engine.IsSet() {
		return true
	}

	return false
}

// SetEngine gets a reference to the given NullableEngineHtml and assigns it to the Engine field.
func (o *TemplateVersionUpdatable) SetEngine(v EngineHtml) {
	o.Engine.Set(&v)
}
// SetEngineNil sets the value for Engine to be an explicit nil
func (o *TemplateVersionUpdatable) SetEngineNil() {
	o.Engine.Set(nil)
}

// UnsetEngine ensures that no value is present for Engine, not even an explicit nil
func (o *TemplateVersionUpdatable) UnsetEngine() {
	o.Engine.Unset()
}

func (o TemplateVersionUpdatable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Engine.IsSet() {
		toSerialize["engine"] = o.Engine.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateVersionUpdatable struct {
	value *TemplateVersionUpdatable
	isSet bool
}

func (v NullableTemplateVersionUpdatable) Get() *TemplateVersionUpdatable {
	return v.value
}

func (v *NullableTemplateVersionUpdatable) Set(val *TemplateVersionUpdatable) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateVersionUpdatable) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateVersionUpdatable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateVersionUpdatable(val *TemplateVersionUpdatable) *NullableTemplateVersionUpdatable {
	return &NullableTemplateVersionUpdatable{value: val, isSet: true}
}

func (v NullableTemplateVersionUpdatable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateVersionUpdatable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


