/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
)

// Thumbnail struct for Thumbnail
type Thumbnail struct {
	// A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated.
	Small *string `json:"small,omitempty"`
	// A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated.
	Medium *string `json:"medium,omitempty"`
	// A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated.
	Large *string `json:"large,omitempty"`
}

// NewThumbnail instantiates a new Thumbnail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThumbnail() *Thumbnail {
	this := Thumbnail{}
	return &this
}

// NewThumbnailWithDefaults instantiates a new Thumbnail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThumbnailWithDefaults() *Thumbnail {
	this := Thumbnail{}
	return &this
}

// GetSmall returns the Small field value if set, zero value otherwise.
func (o *Thumbnail) GetSmall() string {
	if o == nil || o.Small == nil {
		var ret string
		return ret
	}
	return *o.Small
}

// GetSmallOk returns a tuple with the Small field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Thumbnail) GetSmallOk() (*string, bool) {
	if o == nil || o.Small == nil {
		return nil, false
	}
	return o.Small, true
}

// HasSmall returns a boolean if a field has been set.
func (o *Thumbnail) HasSmall() bool {
	if o != nil && o.Small != nil {
		return true
	}

	return false
}

// SetSmall gets a reference to the given string and assigns it to the Small field.
func (o *Thumbnail) SetSmall(v string) {
	o.Small = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *Thumbnail) GetMedium() string {
	if o == nil || o.Medium == nil {
		var ret string
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Thumbnail) GetMediumOk() (*string, bool) {
	if o == nil || o.Medium == nil {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *Thumbnail) HasMedium() bool {
	if o != nil && o.Medium != nil {
		return true
	}

	return false
}

// SetMedium gets a reference to the given string and assigns it to the Medium field.
func (o *Thumbnail) SetMedium(v string) {
	o.Medium = &v
}

// GetLarge returns the Large field value if set, zero value otherwise.
func (o *Thumbnail) GetLarge() string {
	if o == nil || o.Large == nil {
		var ret string
		return ret
	}
	return *o.Large
}

// GetLargeOk returns a tuple with the Large field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Thumbnail) GetLargeOk() (*string, bool) {
	if o == nil || o.Large == nil {
		return nil, false
	}
	return o.Large, true
}

// HasLarge returns a boolean if a field has been set.
func (o *Thumbnail) HasLarge() bool {
	if o != nil && o.Large != nil {
		return true
	}

	return false
}

// SetLarge gets a reference to the given string and assigns it to the Large field.
func (o *Thumbnail) SetLarge(v string) {
	o.Large = &v
}

func (o Thumbnail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Small != nil {
		toSerialize["small"] = o.Small
	}
	if o.Medium != nil {
		toSerialize["medium"] = o.Medium
	}
	if o.Large != nil {
		toSerialize["large"] = o.Large
	}
	return json.Marshal(toSerialize)
}

type NullableThumbnail struct {
	value *Thumbnail
	isSet bool
}

func (v NullableThumbnail) Get() *Thumbnail {
	return v.value
}

func (v *NullableThumbnail) Set(val *Thumbnail) {
	v.value = val
	v.isSet = true
}

func (v NullableThumbnail) IsSet() bool {
	return v.isSet
}

func (v *NullableThumbnail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThumbnail(val *Thumbnail) *NullableThumbnail {
	return &NullableThumbnail{value: val, isSet: true}
}

func (v NullableThumbnail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThumbnail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


