/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	"time"
)

// CreativeResponse struct for CreativeResponse
type CreativeResponse struct {
	// Unique identifier prefixed with `crv_`.
	Id *string `json:"id,omitempty"`
	// An internal description that identifies this resource. Must be no longer than 255 characters. 
	Description NullableString `json:"description,omitempty"`
	// Must either be an address ID or an inline object with correct address parameters.
	From interface{} `json:"from,omitempty"`
	// Mailpiece type for the creative
	ResourceType *string `json:"resource_type,omitempty"`
	// Either PostcardDetailsReturned or LetterDetailsReturned
	Details interface{} `json:"details,omitempty"`
	// Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// Preview URLs associated with a creative's artwork asset(s) if the creative uses HTML templates as assets.
	TemplatePreviewUrls map[string]interface{} `json:"template_preview_urls,omitempty"`
	// A list of template preview objects if the creative uses HTML template(s) as artwork asset(s).
	TemplatePreviews []map[string]interface{} `json:"template_previews,omitempty"`
	// Only returned if the resource has been successfully deleted.
	Deleted *bool `json:"deleted,omitempty"`
	// Array of campaigns associated with the creative ID
	Campaigns []Campaign `json:"campaigns,omitempty"`
	// A timestamp in ISO 8601 format of the date the resource was created.
	DateCreated *time.Time `json:"date_created,omitempty"`
	// A timestamp in ISO 8601 format of the date the resource was last modified.
	DateModified *time.Time `json:"date_modified,omitempty"`
	// Value is resource type.
	Object *string `json:"object,omitempty"`
}

// NewCreativeResponse instantiates a new CreativeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreativeResponse() *CreativeResponse {
	this := CreativeResponse{}
	var object string = "creative"
	this.Object = &object
	return &this
}

// NewCreativeResponseWithDefaults instantiates a new CreativeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreativeResponseWithDefaults() *CreativeResponse {
	this := CreativeResponse{}
	var object string = "creative"
	this.Object = &object
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreativeResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreativeResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreativeResponse) SetId(v string) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreativeResponse) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreativeResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreativeResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreativeResponse) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreativeResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreativeResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetFrom returns the From field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreativeResponse) GetFrom() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreativeResponse) GetFromOk() (*interface{}, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return &o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *CreativeResponse) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given interface{} and assigns it to the From field.
func (o *CreativeResponse) SetFrom(v interface{}) {
	o.From = v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *CreativeResponse) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeResponse) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *CreativeResponse) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *CreativeResponse) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreativeResponse) GetDetails() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreativeResponse) GetDetailsOk() (*interface{}, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return &o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *CreativeResponse) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given interface{} and assigns it to the Details field.
func (o *CreativeResponse) SetDetails(v interface{}) {
	o.Details = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreativeResponse) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeResponse) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreativeResponse) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreativeResponse) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetTemplatePreviewUrls returns the TemplatePreviewUrls field value if set, zero value otherwise.
func (o *CreativeResponse) GetTemplatePreviewUrls() map[string]interface{} {
	if o == nil || o.TemplatePreviewUrls == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.TemplatePreviewUrls
}

// GetTemplatePreviewUrlsOk returns a tuple with the TemplatePreviewUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeResponse) GetTemplatePreviewUrlsOk() (map[string]interface{}, bool) {
	if o == nil || o.TemplatePreviewUrls == nil {
		return nil, false
	}
	return o.TemplatePreviewUrls, true
}

// HasTemplatePreviewUrls returns a boolean if a field has been set.
func (o *CreativeResponse) HasTemplatePreviewUrls() bool {
	if o != nil && o.TemplatePreviewUrls != nil {
		return true
	}

	return false
}

// SetTemplatePreviewUrls gets a reference to the given map[string]interface{} and assigns it to the TemplatePreviewUrls field.
func (o *CreativeResponse) SetTemplatePreviewUrls(v map[string]interface{}) {
	o.TemplatePreviewUrls = v
}

// GetTemplatePreviews returns the TemplatePreviews field value if set, zero value otherwise.
func (o *CreativeResponse) GetTemplatePreviews() []map[string]interface{} {
	if o == nil || o.TemplatePreviews == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.TemplatePreviews
}

// GetTemplatePreviewsOk returns a tuple with the TemplatePreviews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeResponse) GetTemplatePreviewsOk() ([]map[string]interface{}, bool) {
	if o == nil || o.TemplatePreviews == nil {
		return nil, false
	}
	return o.TemplatePreviews, true
}

// HasTemplatePreviews returns a boolean if a field has been set.
func (o *CreativeResponse) HasTemplatePreviews() bool {
	if o != nil && o.TemplatePreviews != nil {
		return true
	}

	return false
}

// SetTemplatePreviews gets a reference to the given []map[string]interface{} and assigns it to the TemplatePreviews field.
func (o *CreativeResponse) SetTemplatePreviews(v []map[string]interface{}) {
	o.TemplatePreviews = v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *CreativeResponse) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeResponse) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *CreativeResponse) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *CreativeResponse) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetCampaigns returns the Campaigns field value if set, zero value otherwise.
func (o *CreativeResponse) GetCampaigns() []Campaign {
	if o == nil || o.Campaigns == nil {
		var ret []Campaign
		return ret
	}
	return o.Campaigns
}

// GetCampaignsOk returns a tuple with the Campaigns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeResponse) GetCampaignsOk() ([]Campaign, bool) {
	if o == nil || o.Campaigns == nil {
		return nil, false
	}
	return o.Campaigns, true
}

// HasCampaigns returns a boolean if a field has been set.
func (o *CreativeResponse) HasCampaigns() bool {
	if o != nil && o.Campaigns != nil {
		return true
	}

	return false
}

// SetCampaigns gets a reference to the given []Campaign and assigns it to the Campaigns field.
func (o *CreativeResponse) SetCampaigns(v []Campaign) {
	o.Campaigns = v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *CreativeResponse) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeResponse) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *CreativeResponse) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *CreativeResponse) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetDateModified returns the DateModified field value if set, zero value otherwise.
func (o *CreativeResponse) GetDateModified() time.Time {
	if o == nil || o.DateModified == nil {
		var ret time.Time
		return ret
	}
	return *o.DateModified
}

// GetDateModifiedOk returns a tuple with the DateModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeResponse) GetDateModifiedOk() (*time.Time, bool) {
	if o == nil || o.DateModified == nil {
		return nil, false
	}
	return o.DateModified, true
}

// HasDateModified returns a boolean if a field has been set.
func (o *CreativeResponse) HasDateModified() bool {
	if o != nil && o.DateModified != nil {
		return true
	}

	return false
}

// SetDateModified gets a reference to the given time.Time and assigns it to the DateModified field.
func (o *CreativeResponse) SetDateModified(v time.Time) {
	o.DateModified = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *CreativeResponse) GetObject() string {
	if o == nil || o.Object == nil {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeResponse) GetObjectOk() (*string, bool) {
	if o == nil || o.Object == nil {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *CreativeResponse) HasObject() bool {
	if o != nil && o.Object != nil {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *CreativeResponse) SetObject(v string) {
	o.Object = &v
}

func (o CreativeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.ResourceType != nil {
		toSerialize["resource_type"] = o.ResourceType
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.TemplatePreviewUrls != nil {
		toSerialize["template_preview_urls"] = o.TemplatePreviewUrls
	}
	if o.TemplatePreviews != nil {
		toSerialize["template_previews"] = o.TemplatePreviews
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Campaigns != nil {
		toSerialize["campaigns"] = o.Campaigns
	}
	if o.DateCreated != nil {
		toSerialize["date_created"] = o.DateCreated
	}
	if o.DateModified != nil {
		toSerialize["date_modified"] = o.DateModified
	}
	if o.Object != nil {
		toSerialize["object"] = o.Object
	}
	return json.Marshal(toSerialize)
}

type NullableCreativeResponse struct {
	value *CreativeResponse
	isSet bool
}

func (v NullableCreativeResponse) Get() *CreativeResponse {
	return v.value
}

func (v *NullableCreativeResponse) Set(val *CreativeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreativeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreativeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreativeResponse(val *CreativeResponse) *NullableCreativeResponse {
	return &NullableCreativeResponse{value: val, isSet: true}
}

func (v NullableCreativeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreativeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


