/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
)

// Suggestions struct for Suggestions
type Suggestions struct {
	// The primary delivery line (usually the street address) of the address. Combination of the following applicable `components` (primary number & secondary information may be missing or inaccurate): * `primary_number` * `street_predirection` * `street_name` * `street_suffix` * `street_postdirection` * `secondary_designator` * `secondary_number` * `pmb_designator` * `pmb_number` 
	PrimaryLine string `json:"primary_line"`
	City string `json:"city"`
	// The [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) two letter code for the state. 
	State string `json:"state"`
	// A 5-digit zip code. Left empty if a test key is used.
	ZipCode string `json:"zip_code"`
	// Value is resource type.
	Object *string `json:"object,omitempty"`
}

// NewSuggestions instantiates a new Suggestions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuggestions(primaryLine string, city string, state string, zipCode string) *Suggestions {
	this := Suggestions{}
	this.PrimaryLine = primaryLine
	this.City = city
	this.State = state
	this.ZipCode = zipCode
	var object string = "us_autocompletion"
	this.Object = &object
	return &this
}

// NewSuggestionsWithDefaults instantiates a new Suggestions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuggestionsWithDefaults() *Suggestions {
	this := Suggestions{}
	var object string = "us_autocompletion"
	this.Object = &object
	return &this
}

// GetPrimaryLine returns the PrimaryLine field value
func (o *Suggestions) GetPrimaryLine() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrimaryLine
}

// GetPrimaryLineOk returns a tuple with the PrimaryLine field value
// and a boolean to check if the value has been set.
func (o *Suggestions) GetPrimaryLineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrimaryLine, true
}

// SetPrimaryLine sets field value
func (o *Suggestions) SetPrimaryLine(v string) {
	o.PrimaryLine = v
}

// GetCity returns the City field value
func (o *Suggestions) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *Suggestions) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *Suggestions) SetCity(v string) {
	o.City = v
}

// GetState returns the State field value
func (o *Suggestions) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Suggestions) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Suggestions) SetState(v string) {
	o.State = v
}

// GetZipCode returns the ZipCode field value
func (o *Suggestions) GetZipCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value
// and a boolean to check if the value has been set.
func (o *Suggestions) GetZipCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZipCode, true
}

// SetZipCode sets field value
func (o *Suggestions) SetZipCode(v string) {
	o.ZipCode = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *Suggestions) GetObject() string {
	if o == nil || o.Object == nil {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions) GetObjectOk() (*string, bool) {
	if o == nil || o.Object == nil {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *Suggestions) HasObject() bool {
	if o != nil && o.Object != nil {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *Suggestions) SetObject(v string) {
	o.Object = &v
}

func (o Suggestions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["primary_line"] = o.PrimaryLine
	}
	if true {
		toSerialize["city"] = o.City
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["zip_code"] = o.ZipCode
	}
	if o.Object != nil {
		toSerialize["object"] = o.Object
	}
	return json.Marshal(toSerialize)
}

type NullableSuggestions struct {
	value *Suggestions
	isSet bool
}

func (v NullableSuggestions) Get() *Suggestions {
	return v.value
}

func (v *NullableSuggestions) Set(val *Suggestions) {
	v.value = val
	v.isSet = true
}

func (v NullableSuggestions) IsSet() bool {
	return v.isSet
}

func (v *NullableSuggestions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuggestions(val *Suggestions) *NullableSuggestions {
	return &NullableSuggestions{value: val, isSet: true}
}

func (v NullableSuggestions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuggestions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


