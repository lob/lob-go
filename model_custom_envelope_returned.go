/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
)

// CustomEnvelopeReturned A nested custom envelope object containing more information about the custom envelope used or `null` if a custom envelope was not used.
type CustomEnvelopeReturned struct {
	// The unique identifier of the custom envelope used.
	Id string `json:"id"`
	// The url of the envelope asset used.
	Url string `json:"url"`
	Object string `json:"object"`
}

// NewCustomEnvelopeReturned instantiates a new CustomEnvelopeReturned object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEnvelopeReturned(id string, url string, object string) *CustomEnvelopeReturned {
	this := CustomEnvelopeReturned{}
	this.Id = id
	this.Url = url
	this.Object = object
	return &this
}

// NewCustomEnvelopeReturnedWithDefaults instantiates a new CustomEnvelopeReturned object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEnvelopeReturnedWithDefaults() *CustomEnvelopeReturned {
	this := CustomEnvelopeReturned{}
	var object string = "envelope"
	this.Object = object
	return &this
}

// GetId returns the Id field value
func (o *CustomEnvelopeReturned) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomEnvelopeReturned) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomEnvelopeReturned) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *CustomEnvelopeReturned) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CustomEnvelopeReturned) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CustomEnvelopeReturned) SetUrl(v string) {
	o.Url = v
}

// GetObject returns the Object field value
func (o *CustomEnvelopeReturned) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *CustomEnvelopeReturned) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *CustomEnvelopeReturned) SetObject(v string) {
	o.Object = v
}

func (o CustomEnvelopeReturned) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["object"] = o.Object
	}
	return json.Marshal(toSerialize)
}

type NullableCustomEnvelopeReturned struct {
	value *CustomEnvelopeReturned
	isSet bool
}

func (v NullableCustomEnvelopeReturned) Get() *CustomEnvelopeReturned {
	return v.value
}

func (v *NullableCustomEnvelopeReturned) Set(val *CustomEnvelopeReturned) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEnvelopeReturned) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEnvelopeReturned) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEnvelopeReturned(val *CustomEnvelopeReturned) *NullableCustomEnvelopeReturned {
	return &NullableCustomEnvelopeReturned{value: val, isSet: true}
}

func (v NullableCustomEnvelopeReturned) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEnvelopeReturned) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


