/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
)

// PlaceholderModel struct for PlaceholderModel
type PlaceholderModel struct {
	ReturnEnvelope *ReturnEnvelope `json:"return_envelope,omitempty"`
	AddressDomestic *AddressDomestic `json:"address_domestic,omitempty"`
	LetterDetailsWritable *LetterDetailsWritable `json:"letter_details_writable,omitempty"`
	PostcardDetailsWritable *PostcardDetailsWritable `json:"postcard_details_writable,omitempty"`
	LetterDetailsReturned *LetterDetailsReturned `json:"letter_details_returned,omitempty"`
	PostcardDetailsReturned *PostcardDetailsReturned `json:"postcard_details_returned,omitempty"`
}

// NewPlaceholderModel instantiates a new PlaceholderModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceholderModel() *PlaceholderModel {
	this := PlaceholderModel{}
	return &this
}

// NewPlaceholderModelWithDefaults instantiates a new PlaceholderModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceholderModelWithDefaults() *PlaceholderModel {
	this := PlaceholderModel{}
	return &this
}

// GetReturnEnvelope returns the ReturnEnvelope field value if set, zero value otherwise.
func (o *PlaceholderModel) GetReturnEnvelope() ReturnEnvelope {
	if o == nil || o.ReturnEnvelope == nil {
		var ret ReturnEnvelope
		return ret
	}
	return *o.ReturnEnvelope
}

// GetReturnEnvelopeOk returns a tuple with the ReturnEnvelope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceholderModel) GetReturnEnvelopeOk() (*ReturnEnvelope, bool) {
	if o == nil || o.ReturnEnvelope == nil {
		return nil, false
	}
	return o.ReturnEnvelope, true
}

// HasReturnEnvelope returns a boolean if a field has been set.
func (o *PlaceholderModel) HasReturnEnvelope() bool {
	if o != nil && o.ReturnEnvelope != nil {
		return true
	}

	return false
}

// SetReturnEnvelope gets a reference to the given ReturnEnvelope and assigns it to the ReturnEnvelope field.
func (o *PlaceholderModel) SetReturnEnvelope(v ReturnEnvelope) {
	o.ReturnEnvelope = &v
}

// GetAddressDomestic returns the AddressDomestic field value if set, zero value otherwise.
func (o *PlaceholderModel) GetAddressDomestic() AddressDomestic {
	if o == nil || o.AddressDomestic == nil {
		var ret AddressDomestic
		return ret
	}
	return *o.AddressDomestic
}

// GetAddressDomesticOk returns a tuple with the AddressDomestic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceholderModel) GetAddressDomesticOk() (*AddressDomestic, bool) {
	if o == nil || o.AddressDomestic == nil {
		return nil, false
	}
	return o.AddressDomestic, true
}

// HasAddressDomestic returns a boolean if a field has been set.
func (o *PlaceholderModel) HasAddressDomestic() bool {
	if o != nil && o.AddressDomestic != nil {
		return true
	}

	return false
}

// SetAddressDomestic gets a reference to the given AddressDomestic and assigns it to the AddressDomestic field.
func (o *PlaceholderModel) SetAddressDomestic(v AddressDomestic) {
	o.AddressDomestic = &v
}

// GetLetterDetailsWritable returns the LetterDetailsWritable field value if set, zero value otherwise.
func (o *PlaceholderModel) GetLetterDetailsWritable() LetterDetailsWritable {
	if o == nil || o.LetterDetailsWritable == nil {
		var ret LetterDetailsWritable
		return ret
	}
	return *o.LetterDetailsWritable
}

// GetLetterDetailsWritableOk returns a tuple with the LetterDetailsWritable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceholderModel) GetLetterDetailsWritableOk() (*LetterDetailsWritable, bool) {
	if o == nil || o.LetterDetailsWritable == nil {
		return nil, false
	}
	return o.LetterDetailsWritable, true
}

// HasLetterDetailsWritable returns a boolean if a field has been set.
func (o *PlaceholderModel) HasLetterDetailsWritable() bool {
	if o != nil && o.LetterDetailsWritable != nil {
		return true
	}

	return false
}

// SetLetterDetailsWritable gets a reference to the given LetterDetailsWritable and assigns it to the LetterDetailsWritable field.
func (o *PlaceholderModel) SetLetterDetailsWritable(v LetterDetailsWritable) {
	o.LetterDetailsWritable = &v
}

// GetPostcardDetailsWritable returns the PostcardDetailsWritable field value if set, zero value otherwise.
func (o *PlaceholderModel) GetPostcardDetailsWritable() PostcardDetailsWritable {
	if o == nil || o.PostcardDetailsWritable == nil {
		var ret PostcardDetailsWritable
		return ret
	}
	return *o.PostcardDetailsWritable
}

// GetPostcardDetailsWritableOk returns a tuple with the PostcardDetailsWritable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceholderModel) GetPostcardDetailsWritableOk() (*PostcardDetailsWritable, bool) {
	if o == nil || o.PostcardDetailsWritable == nil {
		return nil, false
	}
	return o.PostcardDetailsWritable, true
}

// HasPostcardDetailsWritable returns a boolean if a field has been set.
func (o *PlaceholderModel) HasPostcardDetailsWritable() bool {
	if o != nil && o.PostcardDetailsWritable != nil {
		return true
	}

	return false
}

// SetPostcardDetailsWritable gets a reference to the given PostcardDetailsWritable and assigns it to the PostcardDetailsWritable field.
func (o *PlaceholderModel) SetPostcardDetailsWritable(v PostcardDetailsWritable) {
	o.PostcardDetailsWritable = &v
}

// GetLetterDetailsReturned returns the LetterDetailsReturned field value if set, zero value otherwise.
func (o *PlaceholderModel) GetLetterDetailsReturned() LetterDetailsReturned {
	if o == nil || o.LetterDetailsReturned == nil {
		var ret LetterDetailsReturned
		return ret
	}
	return *o.LetterDetailsReturned
}

// GetLetterDetailsReturnedOk returns a tuple with the LetterDetailsReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceholderModel) GetLetterDetailsReturnedOk() (*LetterDetailsReturned, bool) {
	if o == nil || o.LetterDetailsReturned == nil {
		return nil, false
	}
	return o.LetterDetailsReturned, true
}

// HasLetterDetailsReturned returns a boolean if a field has been set.
func (o *PlaceholderModel) HasLetterDetailsReturned() bool {
	if o != nil && o.LetterDetailsReturned != nil {
		return true
	}

	return false
}

// SetLetterDetailsReturned gets a reference to the given LetterDetailsReturned and assigns it to the LetterDetailsReturned field.
func (o *PlaceholderModel) SetLetterDetailsReturned(v LetterDetailsReturned) {
	o.LetterDetailsReturned = &v
}

// GetPostcardDetailsReturned returns the PostcardDetailsReturned field value if set, zero value otherwise.
func (o *PlaceholderModel) GetPostcardDetailsReturned() PostcardDetailsReturned {
	if o == nil || o.PostcardDetailsReturned == nil {
		var ret PostcardDetailsReturned
		return ret
	}
	return *o.PostcardDetailsReturned
}

// GetPostcardDetailsReturnedOk returns a tuple with the PostcardDetailsReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceholderModel) GetPostcardDetailsReturnedOk() (*PostcardDetailsReturned, bool) {
	if o == nil || o.PostcardDetailsReturned == nil {
		return nil, false
	}
	return o.PostcardDetailsReturned, true
}

// HasPostcardDetailsReturned returns a boolean if a field has been set.
func (o *PlaceholderModel) HasPostcardDetailsReturned() bool {
	if o != nil && o.PostcardDetailsReturned != nil {
		return true
	}

	return false
}

// SetPostcardDetailsReturned gets a reference to the given PostcardDetailsReturned and assigns it to the PostcardDetailsReturned field.
func (o *PlaceholderModel) SetPostcardDetailsReturned(v PostcardDetailsReturned) {
	o.PostcardDetailsReturned = &v
}

func (o PlaceholderModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ReturnEnvelope != nil {
		toSerialize["return_envelope"] = o.ReturnEnvelope
	}
	if o.AddressDomestic != nil {
		toSerialize["address_domestic"] = o.AddressDomestic
	}
	if o.LetterDetailsWritable != nil {
		toSerialize["letter_details_writable"] = o.LetterDetailsWritable
	}
	if o.PostcardDetailsWritable != nil {
		toSerialize["postcard_details_writable"] = o.PostcardDetailsWritable
	}
	if o.LetterDetailsReturned != nil {
		toSerialize["letter_details_returned"] = o.LetterDetailsReturned
	}
	if o.PostcardDetailsReturned != nil {
		toSerialize["postcard_details_returned"] = o.PostcardDetailsReturned
	}
	return json.Marshal(toSerialize)
}

type NullablePlaceholderModel struct {
	value *PlaceholderModel
	isSet bool
}

func (v NullablePlaceholderModel) Get() *PlaceholderModel {
	return v.value
}

func (v *NullablePlaceholderModel) Set(val *PlaceholderModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceholderModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceholderModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceholderModel(val *PlaceholderModel) *NullablePlaceholderModel {
	return &NullablePlaceholderModel{value: val, isSet: true}
}

func (v NullablePlaceholderModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceholderModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


