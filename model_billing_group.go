/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	"time"
)

// BillingGroup struct for BillingGroup
type BillingGroup struct {
	// Description of the billing group.
	Description *string `json:"description,omitempty"`
	// Name of the billing group.
	Name string `json:"name"`
	// Unique identifier prefixed with `bg_`.
	Id string `json:"id"`
	// A timestamp in ISO 8601 format of the date the resource was created.
	DateCreated time.Time `json:"date_created"`
	// A timestamp in ISO 8601 format of the date the resource was last modified.
	DateModified time.Time `json:"date_modified"`
	// Value is resource type.
	Object string `json:"object"`
}

// NewBillingGroup instantiates a new BillingGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingGroup(name string, id string, dateCreated time.Time, dateModified time.Time, object string) *BillingGroup {
	this := BillingGroup{}
	this.Name = name
	this.Id = id
	this.DateCreated = dateCreated
	this.DateModified = dateModified
	this.Object = object
	return &this
}

// NewBillingGroupWithDefaults instantiates a new BillingGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingGroupWithDefaults() *BillingGroup {
	this := BillingGroup{}
	var object string = "billing_group"
	this.Object = object
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BillingGroup) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BillingGroup) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BillingGroup) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *BillingGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BillingGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BillingGroup) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *BillingGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BillingGroup) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BillingGroup) SetId(v string) {
	o.Id = v
}

// GetDateCreated returns the DateCreated field value
func (o *BillingGroup) GetDateCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value
// and a boolean to check if the value has been set.
func (o *BillingGroup) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateCreated, true
}

// SetDateCreated sets field value
func (o *BillingGroup) SetDateCreated(v time.Time) {
	o.DateCreated = v
}

// GetDateModified returns the DateModified field value
func (o *BillingGroup) GetDateModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateModified
}

// GetDateModifiedOk returns a tuple with the DateModified field value
// and a boolean to check if the value has been set.
func (o *BillingGroup) GetDateModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateModified, true
}

// SetDateModified sets field value
func (o *BillingGroup) SetDateModified(v time.Time) {
	o.DateModified = v
}

// GetObject returns the Object field value
func (o *BillingGroup) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *BillingGroup) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *BillingGroup) SetObject(v string) {
	o.Object = v
}

func (o BillingGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["date_created"] = o.DateCreated
	}
	if true {
		toSerialize["date_modified"] = o.DateModified
	}
	if true {
		toSerialize["object"] = o.Object
	}
	return json.Marshal(toSerialize)
}

type NullableBillingGroup struct {
	value *BillingGroup
	isSet bool
}

func (v NullableBillingGroup) Get() *BillingGroup {
	return v.value
}

func (v *NullableBillingGroup) Set(val *BillingGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingGroup(val *BillingGroup) *NullableBillingGroup {
	return &NullableBillingGroup{value: val, isSet: true}
}

func (v NullableBillingGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


