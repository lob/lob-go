/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
	"time"
)

// Export struct for Export
type Export struct {
	// Unique identifier prefixed with `ex_`.
	Id string `json:"id"`
	// A timestamp in ISO 8601 format of the date the export was created
	DateCreated time.Time `json:"dateCreated"`
	// A timestamp in ISO 8601 format of the date the export was last modified
	DateModified time.Time `json:"dateModified"`
	// Returns as `true` if the resource has been successfully deleted.
	Deleted bool `json:"deleted"`
	// The URL for the generated export file.
	S3Url *string `json:"s3Url,omitempty"`
	// The state of the export file, which can be `in_progress`, `failed` or `succeeded`.
	State string `json:"state"`
	// The export file type, which can be `all`, `failures` or `successes`.
	Type string `json:"type"`
	// Unique identifier prefixed with `upl_`.
	UploadId string `json:"uploadId"`
}

// NewExport instantiates a new Export object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExport(id string, dateCreated time.Time, dateModified time.Time, deleted bool, state string, type_ string, uploadId string) *Export {
	this := Export{}
	this.Id = id
	this.DateCreated = dateCreated
	this.DateModified = dateModified
	this.Deleted = deleted
	this.State = state
	this.Type = type_
	this.UploadId = uploadId
	return &this
}

// NewExportWithDefaults instantiates a new Export object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportWithDefaults() *Export {
	this := Export{}
	return &this
}

// GetId returns the Id field value
func (o *Export) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Export) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Export) SetId(v string) {
	o.Id = v
}

// GetDateCreated returns the DateCreated field value
func (o *Export) GetDateCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value
// and a boolean to check if the value has been set.
func (o *Export) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateCreated, true
}

// SetDateCreated sets field value
func (o *Export) SetDateCreated(v time.Time) {
	o.DateCreated = v
}

// GetDateModified returns the DateModified field value
func (o *Export) GetDateModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateModified
}

// GetDateModifiedOk returns a tuple with the DateModified field value
// and a boolean to check if the value has been set.
func (o *Export) GetDateModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateModified, true
}

// SetDateModified sets field value
func (o *Export) SetDateModified(v time.Time) {
	o.DateModified = v
}

// GetDeleted returns the Deleted field value
func (o *Export) GetDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *Export) GetDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *Export) SetDeleted(v bool) {
	o.Deleted = v
}

// GetS3Url returns the S3Url field value if set, zero value otherwise.
func (o *Export) GetS3Url() string {
	if o == nil || o.S3Url == nil {
		var ret string
		return ret
	}
	return *o.S3Url
}

// GetS3UrlOk returns a tuple with the S3Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Export) GetS3UrlOk() (*string, bool) {
	if o == nil || o.S3Url == nil {
		return nil, false
	}
	return o.S3Url, true
}

// HasS3Url returns a boolean if a field has been set.
func (o *Export) HasS3Url() bool {
	if o != nil && o.S3Url != nil {
		return true
	}

	return false
}

// SetS3Url gets a reference to the given string and assigns it to the S3Url field.
func (o *Export) SetS3Url(v string) {
	o.S3Url = &v
}

// GetState returns the State field value
func (o *Export) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Export) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Export) SetState(v string) {
	o.State = v
}

// GetType returns the Type field value
func (o *Export) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Export) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Export) SetType(v string) {
	o.Type = v
}

// GetUploadId returns the UploadId field value
func (o *Export) GetUploadId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadId
}

// GetUploadIdOk returns a tuple with the UploadId field value
// and a boolean to check if the value has been set.
func (o *Export) GetUploadIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadId, true
}

// SetUploadId sets field value
func (o *Export) SetUploadId(v string) {
	o.UploadId = v
}

func (o Export) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if true {
		toSerialize["dateModified"] = o.DateModified
	}
	if true {
		toSerialize["deleted"] = o.Deleted
	}
	if o.S3Url != nil {
		toSerialize["s3Url"] = o.S3Url
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["uploadId"] = o.UploadId
	}
	return json.Marshal(toSerialize)
}

type NullableExport struct {
	value *Export
	isSet bool
}

func (v NullableExport) Get() *Export {
	return v.value
}

func (v *NullableExport) Set(val *Export) {
	v.value = val
	v.isSet = true
}

func (v NullableExport) IsSet() bool {
	return v.isSet
}

func (v *NullableExport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExport(val *Export) *NullableExport {
	return &NullableExport{value: val, isSet: true}
}

func (v NullableExport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


