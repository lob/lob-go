/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
)

// CreativeWritable struct for CreativeWritable
type CreativeWritable struct {
	// Must either be an address ID or an inline object with correct address parameters.
	From interface{} `json:"from"`
	// An internal description that identifies this resource. Must be no longer than 255 characters. 
	Description NullableString `json:"description,omitempty"`
	// Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// Mailpiece type for the creative
	ResourceType string `json:"resource_type"`
	// Unique identifier prefixed with `cmp_`.
	CampaignId string `json:"campaign_id"`
	// Either PostcardDetailsWritable or LetterDetailsWritable
	Details interface{} `json:"details,omitempty"`
	// PDF file containing the letter's formatting. Do not include for resource_type = postcard.
	File *string `json:"file,omitempty"`
	// The artwork to use as the front of your postcard. Do not include for resource_type = letter. 
	Front *string `json:"front,omitempty"`
	// The artwork to use as the back of your postcard. Do not include for resource_type = letter. 
	Back *string `json:"back,omitempty"`
}

// NewCreativeWritable instantiates a new CreativeWritable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreativeWritable(from interface{}, resourceType string, campaignId string) *CreativeWritable {
	this := CreativeWritable{}
	this.From = from
	this.ResourceType = resourceType
	this.CampaignId = campaignId
	return &this
}

// NewCreativeWritableWithDefaults instantiates a new CreativeWritable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreativeWritableWithDefaults() *CreativeWritable {
	this := CreativeWritable{}
	return &this
}

// GetFrom returns the From field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *CreativeWritable) GetFrom() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreativeWritable) GetFromOk() (*interface{}, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *CreativeWritable) SetFrom(v interface{}) {
	o.From = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreativeWritable) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreativeWritable) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreativeWritable) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreativeWritable) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreativeWritable) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreativeWritable) UnsetDescription() {
	o.Description.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreativeWritable) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeWritable) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreativeWritable) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreativeWritable) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetResourceType returns the ResourceType field value
func (o *CreativeWritable) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *CreativeWritable) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *CreativeWritable) SetResourceType(v string) {
	o.ResourceType = v
}

// GetCampaignId returns the CampaignId field value
func (o *CreativeWritable) GetCampaignId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value
// and a boolean to check if the value has been set.
func (o *CreativeWritable) GetCampaignIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CampaignId, true
}

// SetCampaignId sets field value
func (o *CreativeWritable) SetCampaignId(v string) {
	o.CampaignId = v
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreativeWritable) GetDetails() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreativeWritable) GetDetailsOk() (*interface{}, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return &o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *CreativeWritable) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given interface{} and assigns it to the Details field.
func (o *CreativeWritable) SetDetails(v interface{}) {
	o.Details = v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *CreativeWritable) GetFile() string {
	if o == nil || o.File == nil {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeWritable) GetFileOk() (*string, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *CreativeWritable) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *CreativeWritable) SetFile(v string) {
	o.File = &v
}

// GetFront returns the Front field value if set, zero value otherwise.
func (o *CreativeWritable) GetFront() string {
	if o == nil || o.Front == nil {
		var ret string
		return ret
	}
	return *o.Front
}

// GetFrontOk returns a tuple with the Front field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeWritable) GetFrontOk() (*string, bool) {
	if o == nil || o.Front == nil {
		return nil, false
	}
	return o.Front, true
}

// HasFront returns a boolean if a field has been set.
func (o *CreativeWritable) HasFront() bool {
	if o != nil && o.Front != nil {
		return true
	}

	return false
}

// SetFront gets a reference to the given string and assigns it to the Front field.
func (o *CreativeWritable) SetFront(v string) {
	o.Front = &v
}

// GetBack returns the Back field value if set, zero value otherwise.
func (o *CreativeWritable) GetBack() string {
	if o == nil || o.Back == nil {
		var ret string
		return ret
	}
	return *o.Back
}

// GetBackOk returns a tuple with the Back field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeWritable) GetBackOk() (*string, bool) {
	if o == nil || o.Back == nil {
		return nil, false
	}
	return o.Back, true
}

// HasBack returns a boolean if a field has been set.
func (o *CreativeWritable) HasBack() bool {
	if o != nil && o.Back != nil {
		return true
	}

	return false
}

// SetBack gets a reference to the given string and assigns it to the Back field.
func (o *CreativeWritable) SetBack(v string) {
	o.Back = &v
}

func (o CreativeWritable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["resource_type"] = o.ResourceType
	}
	if true {
		toSerialize["campaign_id"] = o.CampaignId
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if o.File != nil {
		toSerialize["file"] = o.File
	}
	if o.Front != nil {
		toSerialize["front"] = o.Front
	}
	if o.Back != nil {
		toSerialize["back"] = o.Back
	}
	return json.Marshal(toSerialize)
}

type NullableCreativeWritable struct {
	value *CreativeWritable
	isSet bool
}

func (v NullableCreativeWritable) Get() *CreativeWritable {
	return v.value
}

func (v *NullableCreativeWritable) Set(val *CreativeWritable) {
	v.value = val
	v.isSet = true
}

func (v NullableCreativeWritable) IsSet() bool {
	return v.isSet
}

func (v *NullableCreativeWritable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreativeWritable(val *CreativeWritable) *NullableCreativeWritable {
	return &NullableCreativeWritable{value: val, isSet: true}
}

func (v NullableCreativeWritable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreativeWritable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


