/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob.go

import (
	"encoding/json"
	"time"
)

// SelfMailer struct for SelfMailer
type SelfMailer struct {
	// Unique identifier prefixed with `sfm_`.
	Id string `json:"id"`
	To interface{} `json:"to"`
	From interface{} `json:"from,omitempty"`
	Size *SelfMailerSize `json:"size,omitempty"`
	// An internal description that identifies this resource. Must be no longer than 255 characters. 
	Description NullableString `json:"description,omitempty"`
	// Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `\"` and `\\`. i.e. '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information.
	Metadata *map[string]string `json:"metadata,omitempty"`
	MailType *MailType `json:"mail_type,omitempty"`
	// You can input a merge variable payload object to your template to render dynamic content. For example, if you have a template like: `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render `Harry`. `merge_variables` must be an object. Any type of value is accepted as long as the object is valid JSON; you can use `strings`, `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of the object is 25,000 characters. If you call `JSON.stringify` on your object, it can be no longer than 25,000 characters. Your variable names cannot contain any whitespace or any of the following special characters: `!`, `\"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `;`, `<`, `=`, `>`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`, `~`. More instructions can be found in [our guide to using html and merge variables](https://lob.com/resources/guides/general/using-html-and-merge-variables). Depending on your [Merge Variable strictness](https://dashboard.lob.com/#/settings/account) setting, if you define variables in your HTML but do not pass them here, you will either receive an error or the variable will render as an empty string.
	MergeVariables map[string]interface{} `json:"merge_variables,omitempty"`
	// A timestamp in ISO 8601 format which specifies a date after the current time and up to 180 days in the future to send the letter off for production. Setting a send date overrides the default [cancellation window](#section/Cancellation-Windows) applied to the mailpiece. Until the `send_date` has passed, the mailpiece can be canceled. If a date in the format `2017-11-01` is passed, it will evaluate to midnight UTC of that date (`2017-11-01T00:00:00.000Z`). If a datetime is passed, that exact time will be used. A `send_date` passed with no time zone will default to UTC, while a `send_date` passed with a time zone will be converted to UTC.
	SendDate *time.Time `json:"send_date,omitempty"`
	// The unique ID of the HTML template used for the outside of the self mailer.
	OutsideTemplateId NullableString `json:"outside_template_id,omitempty"`
	// The unique ID of the HTML template used for the inside of the self mailer.
	InsideTemplateId NullableString `json:"inside_template_id,omitempty"`
	// The unique ID of the specific version of the HTML template used for the outside of the self mailer.
	OutsideTemplateVersionId NullableString `json:"outside_template_version_id,omitempty"`
	// The unique ID of the specific version of the HTML template used for the inside of the self mailer.
	InsideTemplateVersionId NullableString `json:"inside_template_version_id,omitempty"`
	// Value is resource type.
	Object *string `json:"object,omitempty"`
	// An array of certified tracking events ordered by ascending `time`. Not populated in test mode.
	TrackingEvents []TrackingEventCertified `json:"tracking_events,omitempty"`
	// A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30 days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be generated.
	Url string `json:"url"`
}

// NewSelfMailer instantiates a new SelfMailer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelfMailer(id string, to interface{}, url string) *SelfMailer {
	this := SelfMailer{}
	this.Id = id
	this.To = to
	var size SelfMailerSize = _6X18_BIFOLD
	this.Size = &size
	var mailType MailType = FIRST_CLASS
	this.MailType = &mailType
	var object string = "self_mailer"
	this.Object = &object
	this.Url = url
	return &this
}

// NewSelfMailerWithDefaults instantiates a new SelfMailer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelfMailerWithDefaults() *SelfMailer {
	this := SelfMailer{}
	var size SelfMailerSize = _6X18_BIFOLD
	this.Size = &size
	var mailType MailType = FIRST_CLASS
	this.MailType = &mailType
	var object string = "self_mailer"
	this.Object = &object
	return &this
}

// GetId returns the Id field value
func (o *SelfMailer) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SelfMailer) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SelfMailer) SetId(v string) {
	o.Id = v
}

// GetTo returns the To field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SelfMailer) GetTo() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SelfMailer) GetToOk() (*interface{}, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *SelfMailer) SetTo(v interface{}) {
	o.To = v
}

// GetFrom returns the From field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SelfMailer) GetFrom() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SelfMailer) GetFromOk() (*interface{}, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return &o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *SelfMailer) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given interface{} and assigns it to the From field.
func (o *SelfMailer) SetFrom(v interface{}) {
	o.From = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *SelfMailer) GetSize() SelfMailerSize {
	if o == nil || o.Size == nil {
		var ret SelfMailerSize
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfMailer) GetSizeOk() (*SelfMailerSize, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *SelfMailer) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given SelfMailerSize and assigns it to the Size field.
func (o *SelfMailer) SetSize(v SelfMailerSize) {
	o.Size = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SelfMailer) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SelfMailer) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SelfMailer) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SelfMailer) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SelfMailer) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SelfMailer) UnsetDescription() {
	o.Description.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SelfMailer) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfMailer) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SelfMailer) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *SelfMailer) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetMailType returns the MailType field value if set, zero value otherwise.
func (o *SelfMailer) GetMailType() MailType {
	if o == nil || o.MailType == nil {
		var ret MailType
		return ret
	}
	return *o.MailType
}

// GetMailTypeOk returns a tuple with the MailType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfMailer) GetMailTypeOk() (*MailType, bool) {
	if o == nil || o.MailType == nil {
		return nil, false
	}
	return o.MailType, true
}

// HasMailType returns a boolean if a field has been set.
func (o *SelfMailer) HasMailType() bool {
	if o != nil && o.MailType != nil {
		return true
	}

	return false
}

// SetMailType gets a reference to the given MailType and assigns it to the MailType field.
func (o *SelfMailer) SetMailType(v MailType) {
	o.MailType = &v
}

// GetMergeVariables returns the MergeVariables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SelfMailer) GetMergeVariables() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.MergeVariables
}

// GetMergeVariablesOk returns a tuple with the MergeVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SelfMailer) GetMergeVariablesOk() (map[string]interface{}, bool) {
	if o == nil || o.MergeVariables == nil {
		return nil, false
	}
	return o.MergeVariables, true
}

// HasMergeVariables returns a boolean if a field has been set.
func (o *SelfMailer) HasMergeVariables() bool {
	if o != nil && o.MergeVariables != nil {
		return true
	}

	return false
}

// SetMergeVariables gets a reference to the given map[string]interface{} and assigns it to the MergeVariables field.
func (o *SelfMailer) SetMergeVariables(v map[string]interface{}) {
	o.MergeVariables = v
}

// GetSendDate returns the SendDate field value if set, zero value otherwise.
func (o *SelfMailer) GetSendDate() time.Time {
	if o == nil || o.SendDate == nil {
		var ret time.Time
		return ret
	}
	return *o.SendDate
}

// GetSendDateOk returns a tuple with the SendDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfMailer) GetSendDateOk() (*time.Time, bool) {
	if o == nil || o.SendDate == nil {
		return nil, false
	}
	return o.SendDate, true
}

// HasSendDate returns a boolean if a field has been set.
func (o *SelfMailer) HasSendDate() bool {
	if o != nil && o.SendDate != nil {
		return true
	}

	return false
}

// SetSendDate gets a reference to the given time.Time and assigns it to the SendDate field.
func (o *SelfMailer) SetSendDate(v time.Time) {
	o.SendDate = &v
}

// GetOutsideTemplateId returns the OutsideTemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SelfMailer) GetOutsideTemplateId() string {
	if o == nil || o.OutsideTemplateId.Get() == nil {
		var ret string
		return ret
	}
	return *o.OutsideTemplateId.Get()
}

// GetOutsideTemplateIdOk returns a tuple with the OutsideTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SelfMailer) GetOutsideTemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutsideTemplateId.Get(), o.OutsideTemplateId.IsSet()
}

// HasOutsideTemplateId returns a boolean if a field has been set.
func (o *SelfMailer) HasOutsideTemplateId() bool {
	if o != nil && o.OutsideTemplateId.IsSet() {
		return true
	}

	return false
}

// SetOutsideTemplateId gets a reference to the given NullableString and assigns it to the OutsideTemplateId field.
func (o *SelfMailer) SetOutsideTemplateId(v string) {
	o.OutsideTemplateId.Set(&v)
}
// SetOutsideTemplateIdNil sets the value for OutsideTemplateId to be an explicit nil
func (o *SelfMailer) SetOutsideTemplateIdNil() {
	o.OutsideTemplateId.Set(nil)
}

// UnsetOutsideTemplateId ensures that no value is present for OutsideTemplateId, not even an explicit nil
func (o *SelfMailer) UnsetOutsideTemplateId() {
	o.OutsideTemplateId.Unset()
}

// GetInsideTemplateId returns the InsideTemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SelfMailer) GetInsideTemplateId() string {
	if o == nil || o.InsideTemplateId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InsideTemplateId.Get()
}

// GetInsideTemplateIdOk returns a tuple with the InsideTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SelfMailer) GetInsideTemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InsideTemplateId.Get(), o.InsideTemplateId.IsSet()
}

// HasInsideTemplateId returns a boolean if a field has been set.
func (o *SelfMailer) HasInsideTemplateId() bool {
	if o != nil && o.InsideTemplateId.IsSet() {
		return true
	}

	return false
}

// SetInsideTemplateId gets a reference to the given NullableString and assigns it to the InsideTemplateId field.
func (o *SelfMailer) SetInsideTemplateId(v string) {
	o.InsideTemplateId.Set(&v)
}
// SetInsideTemplateIdNil sets the value for InsideTemplateId to be an explicit nil
func (o *SelfMailer) SetInsideTemplateIdNil() {
	o.InsideTemplateId.Set(nil)
}

// UnsetInsideTemplateId ensures that no value is present for InsideTemplateId, not even an explicit nil
func (o *SelfMailer) UnsetInsideTemplateId() {
	o.InsideTemplateId.Unset()
}

// GetOutsideTemplateVersionId returns the OutsideTemplateVersionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SelfMailer) GetOutsideTemplateVersionId() string {
	if o == nil || o.OutsideTemplateVersionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.OutsideTemplateVersionId.Get()
}

// GetOutsideTemplateVersionIdOk returns a tuple with the OutsideTemplateVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SelfMailer) GetOutsideTemplateVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutsideTemplateVersionId.Get(), o.OutsideTemplateVersionId.IsSet()
}

// HasOutsideTemplateVersionId returns a boolean if a field has been set.
func (o *SelfMailer) HasOutsideTemplateVersionId() bool {
	if o != nil && o.OutsideTemplateVersionId.IsSet() {
		return true
	}

	return false
}

// SetOutsideTemplateVersionId gets a reference to the given NullableString and assigns it to the OutsideTemplateVersionId field.
func (o *SelfMailer) SetOutsideTemplateVersionId(v string) {
	o.OutsideTemplateVersionId.Set(&v)
}
// SetOutsideTemplateVersionIdNil sets the value for OutsideTemplateVersionId to be an explicit nil
func (o *SelfMailer) SetOutsideTemplateVersionIdNil() {
	o.OutsideTemplateVersionId.Set(nil)
}

// UnsetOutsideTemplateVersionId ensures that no value is present for OutsideTemplateVersionId, not even an explicit nil
func (o *SelfMailer) UnsetOutsideTemplateVersionId() {
	o.OutsideTemplateVersionId.Unset()
}

// GetInsideTemplateVersionId returns the InsideTemplateVersionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SelfMailer) GetInsideTemplateVersionId() string {
	if o == nil || o.InsideTemplateVersionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InsideTemplateVersionId.Get()
}

// GetInsideTemplateVersionIdOk returns a tuple with the InsideTemplateVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SelfMailer) GetInsideTemplateVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InsideTemplateVersionId.Get(), o.InsideTemplateVersionId.IsSet()
}

// HasInsideTemplateVersionId returns a boolean if a field has been set.
func (o *SelfMailer) HasInsideTemplateVersionId() bool {
	if o != nil && o.InsideTemplateVersionId.IsSet() {
		return true
	}

	return false
}

// SetInsideTemplateVersionId gets a reference to the given NullableString and assigns it to the InsideTemplateVersionId field.
func (o *SelfMailer) SetInsideTemplateVersionId(v string) {
	o.InsideTemplateVersionId.Set(&v)
}
// SetInsideTemplateVersionIdNil sets the value for InsideTemplateVersionId to be an explicit nil
func (o *SelfMailer) SetInsideTemplateVersionIdNil() {
	o.InsideTemplateVersionId.Set(nil)
}

// UnsetInsideTemplateVersionId ensures that no value is present for InsideTemplateVersionId, not even an explicit nil
func (o *SelfMailer) UnsetInsideTemplateVersionId() {
	o.InsideTemplateVersionId.Unset()
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *SelfMailer) GetObject() string {
	if o == nil || o.Object == nil {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfMailer) GetObjectOk() (*string, bool) {
	if o == nil || o.Object == nil {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *SelfMailer) HasObject() bool {
	if o != nil && o.Object != nil {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *SelfMailer) SetObject(v string) {
	o.Object = &v
}

// GetTrackingEvents returns the TrackingEvents field value if set, zero value otherwise.
func (o *SelfMailer) GetTrackingEvents() []TrackingEventCertified {
	if o == nil || o.TrackingEvents == nil {
		var ret []TrackingEventCertified
		return ret
	}
	return o.TrackingEvents
}

// GetTrackingEventsOk returns a tuple with the TrackingEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfMailer) GetTrackingEventsOk() ([]TrackingEventCertified, bool) {
	if o == nil || o.TrackingEvents == nil {
		return nil, false
	}
	return o.TrackingEvents, true
}

// HasTrackingEvents returns a boolean if a field has been set.
func (o *SelfMailer) HasTrackingEvents() bool {
	if o != nil && o.TrackingEvents != nil {
		return true
	}

	return false
}

// SetTrackingEvents gets a reference to the given []TrackingEventCertified and assigns it to the TrackingEvents field.
func (o *SelfMailer) SetTrackingEvents(v []TrackingEventCertified) {
	o.TrackingEvents = v
}

// GetUrl returns the Url field value
func (o *SelfMailer) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SelfMailer) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SelfMailer) SetUrl(v string) {
	o.Url = v
}

func (o SelfMailer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.MailType != nil {
		toSerialize["mail_type"] = o.MailType
	}
	if o.MergeVariables != nil {
		toSerialize["merge_variables"] = o.MergeVariables
	}
	if o.SendDate != nil {
		toSerialize["send_date"] = o.SendDate
	}
	if o.OutsideTemplateId.IsSet() {
		toSerialize["outside_template_id"] = o.OutsideTemplateId.Get()
	}
	if o.InsideTemplateId.IsSet() {
		toSerialize["inside_template_id"] = o.InsideTemplateId.Get()
	}
	if o.OutsideTemplateVersionId.IsSet() {
		toSerialize["outside_template_version_id"] = o.OutsideTemplateVersionId.Get()
	}
	if o.InsideTemplateVersionId.IsSet() {
		toSerialize["inside_template_version_id"] = o.InsideTemplateVersionId.Get()
	}
	if o.Object != nil {
		toSerialize["object"] = o.Object
	}
	if o.TrackingEvents != nil {
		toSerialize["tracking_events"] = o.TrackingEvents
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableSelfMailer struct {
	value *SelfMailer
	isSet bool
}

func (v NullableSelfMailer) Get() *SelfMailer {
	return v.value
}

func (v *NullableSelfMailer) Set(val *SelfMailer) {
	v.value = val
	v.isSet = true
}

func (v NullableSelfMailer) IsSet() bool {
	return v.isSet
}

func (v *NullableSelfMailer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelfMailer(val *SelfMailer) *NullableSelfMailer {
	return &NullableSelfMailer{value: val, isSet: true}
}

func (v NullableSelfMailer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelfMailer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


