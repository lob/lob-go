/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob.go

import (
	"encoding/json"
)

// UploadCreateExport struct for UploadCreateExport
type UploadCreateExport struct {
	Message string `json:"message"`
	ExportId string `json:"exportId"`
}

// NewUploadCreateExport instantiates a new UploadCreateExport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUploadCreateExport(message string, exportId string) *UploadCreateExport {
	this := UploadCreateExport{}
	this.Message = message
	this.ExportId = exportId
	return &this
}

// NewUploadCreateExportWithDefaults instantiates a new UploadCreateExport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUploadCreateExportWithDefaults() *UploadCreateExport {
	this := UploadCreateExport{}
	var message string = "Export is processing."
	this.Message = message
	return &this
}

// GetMessage returns the Message field value
func (o *UploadCreateExport) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *UploadCreateExport) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *UploadCreateExport) SetMessage(v string) {
	o.Message = v
}

// GetExportId returns the ExportId field value
func (o *UploadCreateExport) GetExportId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExportId
}

// GetExportIdOk returns a tuple with the ExportId field value
// and a boolean to check if the value has been set.
func (o *UploadCreateExport) GetExportIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExportId, true
}

// SetExportId sets field value
func (o *UploadCreateExport) SetExportId(v string) {
	o.ExportId = v
}

func (o UploadCreateExport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["exportId"] = o.ExportId
	}
	return json.Marshal(toSerialize)
}

type NullableUploadCreateExport struct {
	value *UploadCreateExport
	isSet bool
}

func (v NullableUploadCreateExport) Get() *UploadCreateExport {
	return v.value
}

func (v *NullableUploadCreateExport) Set(val *UploadCreateExport) {
	v.value = val
	v.isSet = true
}

func (v NullableUploadCreateExport) IsSet() bool {
	return v.isSet
}

func (v *NullableUploadCreateExport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUploadCreateExport(val *UploadCreateExport) *NullableUploadCreateExport {
	return &NullableUploadCreateExport{value: val, isSet: true}
}

func (v NullableUploadCreateExport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUploadCreateExport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


