/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob.go

import (
	"encoding/json"
)

// UploadWritable struct for UploadWritable
type UploadWritable struct {
	// Unique identifier prefixed with `cmp_`.
	CampaignId string `json:"campaignId"`
	// The mapping of column headers in your file to Lob-required fields for the resource created. See our <a href=\"https://help.lob.com/best-practices/campaign-audience-guide\" target=\"_blank\">Campaign Audience Guide</a> for additional details.
	ColumnMapping map[string]interface{} `json:"columnMapping"`
}

// NewUploadWritable instantiates a new UploadWritable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUploadWritable(campaignId string, columnMapping map[string]interface{}) *UploadWritable {
	this := UploadWritable{}
	this.CampaignId = campaignId
	this.ColumnMapping = columnMapping
	return &this
}

// NewUploadWritableWithDefaults instantiates a new UploadWritable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUploadWritableWithDefaults() *UploadWritable {
	this := UploadWritable{}
	return &this
}

// GetCampaignId returns the CampaignId field value
func (o *UploadWritable) GetCampaignId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value
// and a boolean to check if the value has been set.
func (o *UploadWritable) GetCampaignIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CampaignId, true
}

// SetCampaignId sets field value
func (o *UploadWritable) SetCampaignId(v string) {
	o.CampaignId = v
}

// GetColumnMapping returns the ColumnMapping field value
func (o *UploadWritable) GetColumnMapping() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ColumnMapping
}

// GetColumnMappingOk returns a tuple with the ColumnMapping field value
// and a boolean to check if the value has been set.
func (o *UploadWritable) GetColumnMappingOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ColumnMapping, true
}

// SetColumnMapping sets field value
func (o *UploadWritable) SetColumnMapping(v map[string]interface{}) {
	o.ColumnMapping = v
}

func (o UploadWritable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["campaignId"] = o.CampaignId
	}
	if true {
		toSerialize["columnMapping"] = o.ColumnMapping
	}
	return json.Marshal(toSerialize)
}

type NullableUploadWritable struct {
	value *UploadWritable
	isSet bool
}

func (v NullableUploadWritable) Get() *UploadWritable {
	return v.value
}

func (v *NullableUploadWritable) Set(val *UploadWritable) {
	v.value = val
	v.isSet = true
}

func (v NullableUploadWritable) IsSet() bool {
	return v.isSet
}

func (v *NullableUploadWritable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUploadWritable(val *UploadWritable) *NullableUploadWritable {
	return &NullableUploadWritable{value: val, isSet: true}
}

func (v NullableUploadWritable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUploadWritable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


