/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
)

// UploadsMetadata The list of column headers in your file as an array that you want as metadata associated with each mailpiece. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2\" target=\"_blank\">Campaign Audience Guide</a> for additional details.
type UploadsMetadata struct {
	// The list of column names from the csv file which you want associated with each of your mailpieces
	Columns []string `json:"columns"`
}

// NewUploadsMetadata instantiates a new UploadsMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUploadsMetadata(columns []string) *UploadsMetadata {
	this := UploadsMetadata{}
	this.Columns = columns
	return &this
}

// NewUploadsMetadataWithDefaults instantiates a new UploadsMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUploadsMetadataWithDefaults() *UploadsMetadata {
	this := UploadsMetadata{}
	return &this
}

// GetColumns returns the Columns field value
func (o *UploadsMetadata) GetColumns() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value
// and a boolean to check if the value has been set.
func (o *UploadsMetadata) GetColumnsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Columns, true
}

// SetColumns sets field value
func (o *UploadsMetadata) SetColumns(v []string) {
	o.Columns = v
}

func (o UploadsMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["columns"] = o.Columns
	}
	return json.Marshal(toSerialize)
}

type NullableUploadsMetadata struct {
	value *UploadsMetadata
	isSet bool
}

func (v NullableUploadsMetadata) Get() *UploadsMetadata {
	return v.value
}

func (v *NullableUploadsMetadata) Set(val *UploadsMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableUploadsMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableUploadsMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUploadsMetadata(val *UploadsMetadata) *NullableUploadsMetadata {
	return &NullableUploadsMetadata{value: val, isSet: true}
}

func (v NullableUploadsMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUploadsMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


