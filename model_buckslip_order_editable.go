/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
)

// BuckslipOrderEditable struct for BuckslipOrderEditable
type BuckslipOrderEditable struct {
	// The quantity of buckslips in the order (minimum 5,000).
	Quantity int32 `json:"quantity"`
}

// NewBuckslipOrderEditable instantiates a new BuckslipOrderEditable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuckslipOrderEditable(quantity int32) *BuckslipOrderEditable {
	this := BuckslipOrderEditable{}
	this.Quantity = quantity
	return &this
}

// NewBuckslipOrderEditableWithDefaults instantiates a new BuckslipOrderEditable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuckslipOrderEditableWithDefaults() *BuckslipOrderEditable {
	this := BuckslipOrderEditable{}
	return &this
}

// GetQuantity returns the Quantity field value
func (o *BuckslipOrderEditable) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *BuckslipOrderEditable) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *BuckslipOrderEditable) SetQuantity(v int32) {
	o.Quantity = v
}

func (o BuckslipOrderEditable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["quantity"] = o.Quantity
	}
	return json.Marshal(toSerialize)
}

type NullableBuckslipOrderEditable struct {
	value *BuckslipOrderEditable
	isSet bool
}

func (v NullableBuckslipOrderEditable) Get() *BuckslipOrderEditable {
	return v.value
}

func (v *NullableBuckslipOrderEditable) Set(val *BuckslipOrderEditable) {
	v.value = val
	v.isSet = true
}

func (v NullableBuckslipOrderEditable) IsSet() bool {
	return v.isSet
}

func (v *NullableBuckslipOrderEditable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuckslipOrderEditable(val *BuckslipOrderEditable) *NullableBuckslipOrderEditable {
	return &NullableBuckslipOrderEditable{value: val, isSet: true}
}

func (v NullableBuckslipOrderEditable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuckslipOrderEditable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


