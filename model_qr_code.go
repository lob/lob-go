/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
)

// QrCode Customize and place a QR code on the creative at the required position.
type QrCode struct {
	// Sets how a QR code is being positioned in the document.
	Position string `json:"position"`
	// Vertical distance(in inches) to place QR code from the top.
	Top *string `json:"top,omitempty"`
	// Horizonal distance(in inches) to place QR code from the right.
	Right *string `json:"right,omitempty"`
	// Horizonal distance(in inches) to place QR code from the left.
	Left *string `json:"left,omitempty"`
	// Vertical distance(in inches) to place QR code from the bottom.
	Bottom *string `json:"bottom,omitempty"`
	// The url to redirect the user when a QR code is scanned. The url must start with `https://`
	RedirectUrl string `json:"redirect_url"`
	// The size(in inches) of the QR code. All QR codes are generated as a square.
	Width string `json:"width"`
}

// NewQrCode instantiates a new QrCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQrCode(position string, redirectUrl string, width string) *QrCode {
	this := QrCode{}
	this.Position = position
	this.RedirectUrl = redirectUrl
	this.Width = width
	return &this
}

// NewQrCodeWithDefaults instantiates a new QrCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQrCodeWithDefaults() *QrCode {
	this := QrCode{}
	return &this
}

// GetPosition returns the Position field value
func (o *QrCode) GetPosition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *QrCode) GetPositionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *QrCode) SetPosition(v string) {
	o.Position = v
}

// GetTop returns the Top field value if set, zero value otherwise.
func (o *QrCode) GetTop() string {
	if o == nil || o.Top == nil {
		var ret string
		return ret
	}
	return *o.Top
}

// GetTopOk returns a tuple with the Top field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrCode) GetTopOk() (*string, bool) {
	if o == nil || o.Top == nil {
		return nil, false
	}
	return o.Top, true
}

// HasTop returns a boolean if a field has been set.
func (o *QrCode) HasTop() bool {
	if o != nil && o.Top != nil {
		return true
	}

	return false
}

// SetTop gets a reference to the given string and assigns it to the Top field.
func (o *QrCode) SetTop(v string) {
	o.Top = &v
}

// GetRight returns the Right field value if set, zero value otherwise.
func (o *QrCode) GetRight() string {
	if o == nil || o.Right == nil {
		var ret string
		return ret
	}
	return *o.Right
}

// GetRightOk returns a tuple with the Right field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrCode) GetRightOk() (*string, bool) {
	if o == nil || o.Right == nil {
		return nil, false
	}
	return o.Right, true
}

// HasRight returns a boolean if a field has been set.
func (o *QrCode) HasRight() bool {
	if o != nil && o.Right != nil {
		return true
	}

	return false
}

// SetRight gets a reference to the given string and assigns it to the Right field.
func (o *QrCode) SetRight(v string) {
	o.Right = &v
}

// GetLeft returns the Left field value if set, zero value otherwise.
func (o *QrCode) GetLeft() string {
	if o == nil || o.Left == nil {
		var ret string
		return ret
	}
	return *o.Left
}

// GetLeftOk returns a tuple with the Left field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrCode) GetLeftOk() (*string, bool) {
	if o == nil || o.Left == nil {
		return nil, false
	}
	return o.Left, true
}

// HasLeft returns a boolean if a field has been set.
func (o *QrCode) HasLeft() bool {
	if o != nil && o.Left != nil {
		return true
	}

	return false
}

// SetLeft gets a reference to the given string and assigns it to the Left field.
func (o *QrCode) SetLeft(v string) {
	o.Left = &v
}

// GetBottom returns the Bottom field value if set, zero value otherwise.
func (o *QrCode) GetBottom() string {
	if o == nil || o.Bottom == nil {
		var ret string
		return ret
	}
	return *o.Bottom
}

// GetBottomOk returns a tuple with the Bottom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QrCode) GetBottomOk() (*string, bool) {
	if o == nil || o.Bottom == nil {
		return nil, false
	}
	return o.Bottom, true
}

// HasBottom returns a boolean if a field has been set.
func (o *QrCode) HasBottom() bool {
	if o != nil && o.Bottom != nil {
		return true
	}

	return false
}

// SetBottom gets a reference to the given string and assigns it to the Bottom field.
func (o *QrCode) SetBottom(v string) {
	o.Bottom = &v
}

// GetRedirectUrl returns the RedirectUrl field value
func (o *QrCode) GetRedirectUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value
// and a boolean to check if the value has been set.
func (o *QrCode) GetRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectUrl, true
}

// SetRedirectUrl sets field value
func (o *QrCode) SetRedirectUrl(v string) {
	o.RedirectUrl = v
}

// GetWidth returns the Width field value
func (o *QrCode) GetWidth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *QrCode) GetWidthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *QrCode) SetWidth(v string) {
	o.Width = v
}

func (o QrCode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["position"] = o.Position
	}
	if o.Top != nil {
		toSerialize["top"] = o.Top
	}
	if o.Right != nil {
		toSerialize["right"] = o.Right
	}
	if o.Left != nil {
		toSerialize["left"] = o.Left
	}
	if o.Bottom != nil {
		toSerialize["bottom"] = o.Bottom
	}
	if true {
		toSerialize["redirect_url"] = o.RedirectUrl
	}
	if true {
		toSerialize["width"] = o.Width
	}
	return json.Marshal(toSerialize)
}

type NullableQrCode struct {
	value *QrCode
	isSet bool
}

func (v NullableQrCode) Get() *QrCode {
	return v.value
}

func (v *NullableQrCode) Set(val *QrCode) {
	v.value = val
	v.isSet = true
}

func (v NullableQrCode) IsSet() bool {
	return v.isSet
}

func (v *NullableQrCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQrCode(val *QrCode) *NullableQrCode {
	return &NullableQrCode{value: val, isSet: true}
}

func (v NullableQrCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQrCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


