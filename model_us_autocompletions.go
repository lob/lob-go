/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
	
)

// UsAutocompletions struct for UsAutocompletions
type UsAutocompletions struct {
	// Unique identifier prefixed with `us_auto_`.
	Id *string `json:"id,omitempty"`
	// An array of objects representing suggested addresses. 
	Suggestions []Suggestions `json:"suggestions,omitempty"`
	// Value is resource type.
	Object *string `json:"object,omitempty"`
}

// NewUsAutocompletions instantiates a new UsAutocompletions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsAutocompletions() *UsAutocompletions {
	this := UsAutocompletions{}
	var object string = "us_autocompletion"
	this.Object = &object
	return &this
}

// NewUsAutocompletionsWithDefaults instantiates a new UsAutocompletions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsAutocompletionsWithDefaults() *UsAutocompletions {
	this := UsAutocompletions{}
	var object string = "us_autocompletion"
	this.Object = &object
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UsAutocompletions) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsAutocompletions) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UsAutocompletions) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UsAutocompletions) SetId(v string) {
	o.Id = &v
}

// GetSuggestions returns the Suggestions field value if set, zero value otherwise.
func (o *UsAutocompletions) GetSuggestions() []Suggestions {
	if o == nil || o.Suggestions == nil {
		var ret []Suggestions
		return ret
	}
	return o.Suggestions
}

// GetSuggestionsOk returns a tuple with the Suggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsAutocompletions) GetSuggestionsOk() ([]Suggestions, bool) {
	if o == nil || o.Suggestions == nil {
		return nil, false
	}
	return o.Suggestions, true
}

// HasSuggestions returns a boolean if a field has been set.
func (o *UsAutocompletions) HasSuggestions() bool {
	if o != nil && o.Suggestions != nil {
		return true
	}

	return false
}

// SetSuggestions gets a reference to the given []Suggestions and assigns it to the Suggestions field.
func (o *UsAutocompletions) SetSuggestions(v []Suggestions) {
	o.Suggestions = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *UsAutocompletions) GetObject() string {
	if o == nil || o.Object == nil {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsAutocompletions) GetObjectOk() (*string, bool) {
	if o == nil || o.Object == nil {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *UsAutocompletions) HasObject() bool {
	if o != nil && o.Object != nil {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *UsAutocompletions) SetObject(v string) {
	o.Object = &v
}

func (o UsAutocompletions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Suggestions != nil {
		toSerialize["suggestions"] = o.Suggestions
	}
	if o.Object != nil {
		toSerialize["object"] = o.Object
	}
	return json.Marshal(toSerialize)
}

type NullableUsAutocompletions struct {
	value *UsAutocompletions
	isSet bool
}

func (v NullableUsAutocompletions) Get() *UsAutocompletions {
	return v.value
}

func (v *NullableUsAutocompletions) Set(val *UsAutocompletions) {
	v.value = val
	v.isSet = true
}

func (v NullableUsAutocompletions) IsSet() bool {
	return v.isSet
}

func (v *NullableUsAutocompletions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsAutocompletions(val *UsAutocompletions) *NullableUsAutocompletions {
	return &NullableUsAutocompletions{value: val, isSet: true}
}

func (v NullableUsAutocompletions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsAutocompletions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


