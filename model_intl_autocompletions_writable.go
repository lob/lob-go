/*
Lob

The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

API version: 1.3.0
Contact: lob-openapi@lob.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lob

import (
	"encoding/json"
)

// IntlAutocompletionsWritable struct for IntlAutocompletionsWritable
type IntlAutocompletionsWritable struct {
	// Only accepts numbers and street names in an alphanumeric format. 
	AddressPrefix string `json:"address_prefix"`
	// An optional city input used to filter suggestions. Case insensitive and does not match partial abbreviations. 
	City *string `json:"city,omitempty"`
	// An optional state input used to filter suggestions. Case insensitive and does not match partial abbreviations. 
	State *string `json:"state,omitempty"`
	// An optional Zip Code input used to filter suggestions. Matches partial entries. 
	ZipCode *string `json:"zip_code,omitempty"`
	Country CountryExtended `json:"country"`
}

// NewIntlAutocompletionsWritable instantiates a new IntlAutocompletionsWritable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntlAutocompletionsWritable(addressPrefix string, country CountryExtended) *IntlAutocompletionsWritable {
	this := IntlAutocompletionsWritable{}
	this.AddressPrefix = addressPrefix
	this.Country = country
	return &this
}

// NewIntlAutocompletionsWritableWithDefaults instantiates a new IntlAutocompletionsWritable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntlAutocompletionsWritableWithDefaults() *IntlAutocompletionsWritable {
	this := IntlAutocompletionsWritable{}
	return &this
}

// GetAddressPrefix returns the AddressPrefix field value
func (o *IntlAutocompletionsWritable) GetAddressPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddressPrefix
}

// GetAddressPrefixOk returns a tuple with the AddressPrefix field value
// and a boolean to check if the value has been set.
func (o *IntlAutocompletionsWritable) GetAddressPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressPrefix, true
}

// SetAddressPrefix sets field value
func (o *IntlAutocompletionsWritable) SetAddressPrefix(v string) {
	o.AddressPrefix = v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *IntlAutocompletionsWritable) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntlAutocompletionsWritable) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *IntlAutocompletionsWritable) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *IntlAutocompletionsWritable) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *IntlAutocompletionsWritable) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntlAutocompletionsWritable) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *IntlAutocompletionsWritable) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *IntlAutocompletionsWritable) SetState(v string) {
	o.State = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *IntlAutocompletionsWritable) GetZipCode() string {
	if o == nil || o.ZipCode == nil {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntlAutocompletionsWritable) GetZipCodeOk() (*string, bool) {
	if o == nil || o.ZipCode == nil {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *IntlAutocompletionsWritable) HasZipCode() bool {
	if o != nil && o.ZipCode != nil {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *IntlAutocompletionsWritable) SetZipCode(v string) {
	o.ZipCode = &v
}

// GetCountry returns the Country field value
func (o *IntlAutocompletionsWritable) GetCountry() CountryExtended {
	if o == nil {
		var ret CountryExtended
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *IntlAutocompletionsWritable) GetCountryOk() (*CountryExtended, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *IntlAutocompletionsWritable) SetCountry(v CountryExtended) {
	o.Country = v
}

func (o IntlAutocompletionsWritable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address_prefix"] = o.AddressPrefix
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.ZipCode != nil {
		toSerialize["zip_code"] = o.ZipCode
	}
	if true {
		toSerialize["country"] = o.Country
	}
	return json.Marshal(toSerialize)
}

type NullableIntlAutocompletionsWritable struct {
	value *IntlAutocompletionsWritable
	isSet bool
}

func (v NullableIntlAutocompletionsWritable) Get() *IntlAutocompletionsWritable {
	return v.value
}

func (v *NullableIntlAutocompletionsWritable) Set(val *IntlAutocompletionsWritable) {
	v.value = val
	v.isSet = true
}

func (v NullableIntlAutocompletionsWritable) IsSet() bool {
	return v.isSet
}

func (v *NullableIntlAutocompletionsWritable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntlAutocompletionsWritable(val *IntlAutocompletionsWritable) *NullableIntlAutocompletionsWritable {
	return &NullableIntlAutocompletionsWritable{value: val, isSet: true}
}

func (v NullableIntlAutocompletionsWritable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntlAutocompletionsWritable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


